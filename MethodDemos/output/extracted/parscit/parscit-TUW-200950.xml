<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.998758">
On the Complexity of Some Colorful Problems
Parameterized by Treewidth *
</title>
<author confidence="0.993914">
Michael Fellows1, Fedor V. Fomin2, Daniel Lokshtanov2, Frances Rosamond1,
Saket Saurabh2,3, Stefan Szeider4 and Carsten Thomassen5
</author>
<affiliation confidence="0.999716">
1 University of Newcastle, Newcastle, Australia
</affiliation>
<email confidence="0.972609">
{michael.fellows,frances.rosamond}@newcastle.edu.au
</email>
<affiliation confidence="0.672752">
2 Department of Informatics, University of Bergen, Bergen, Norway
</affiliation>
<email confidence="0.977186">
{fedor.fomin,Daniel.Lokshtanov,saket}@ii.uib.no
</email>
<affiliation confidence="0.899192">
3 Institute of Mathematical Sciences, Chennai, India
saket@imsc.res.in
4 Department of Computer Science, Durham University, Durham, U.K.
stefan.szeider@durham.ac.uk
5 Mathematics Institute, Danish Technical University, Lyngby, Denmark
</affiliation>
<email confidence="0.868294">
C.Thomassen@mat.dtu.dk
</email>
<bodyText confidence="0.970735807692308">
Abstract. We study the complexity of several coloring problems on graphs, pa-
rameterized by the treewidth t of the graph:
(1) The list chromatic number χl(G) of a graph G is defined to be the small-
est positive integer r, such that for every assignment to the vertices v of G, of
a list L, of colors, where each list has length at least r, there is a choice of one
color from each vertex list L, yielding a proper coloring of G. We show that the
problem of determining whether χl(G) ≤ r, the LIST CHROMATIC NUMBER
problem, is solvable in linear time for every fixed treewidth bound t. The method
by which this is shown is new and of general applicability.
(2) The LIST COLORING problem takes as input a graph G, together with an
assignment to each vertex v of a set of colors C,. The problem is to determine
whether it is possible to choose a color for vertex v from the set of permitted
colors C,, for each vertex, so that the obtained coloring of G is proper. We show
that this problem is W [1]-hard, parameterized by the treewidth of G. The closely
related PRECOLORING EXTENSION problem is also shown to be W[1]-hard, pa-
rameterized by treewidth.
(3) An equitable coloring of a graph G is a proper coloring of the vertices where
the numbers of vertices having any two distinct colors differs by at most one. We
show that the problem is hard for W[1], parameterized by (t, r). We also show
that a list-based variation, LIST EQUITABLE COLORING is W[1]-hard for trees,
parameterized by the number of colors on the lists.
Topics: Parameterized Complexity, Bounded Treewidth, Graph Coloring
? This research has been supported by the Australian Research Council through the Australian
Centre in Bioinformatics. The first author also acknowledges the support provided by a Fel-
lowship to the Institute of Advanced Studies, Durham University, and the support of the Infor-
matics Institute at the University of Bergen during an extended visit.
</bodyText>
<sectionHeader confidence="0.994904" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9967170625">
Coloring problems that involve local and global restrictions on the coloring have many
important applications in such areas as operations research, scheduling and computa-
tional biology, and also have a long mathematical history. For recent surveys of the
area one can turn to [Tu97,KTV98,Al00,Wo01] and also the book [JT95]. In this pa-
per we study the computational complexity of such problems, for graphs of bounded
treewidth, in the framework of parameterized complexity [DF99,Nie06], where we take
the parameter to be the treewidth bound t.
Our main results are summarized:
– We show that the list chromatic number (also known as the choice number [KTV98])
of a graph can be computed in linear time for any fixed treewidth bound t. (We
prove this using a new “trick” for extending the applicability of Monadic Second
Order logic that is of general interest.)
– We show that LIST COLORING and PRECOLORING EXTENSION are W[1]-hard
for parameter t.
– We show that EQUITABLE COLORING is W [1]-hard parameterized by t.
The problems are defined as follows.
</bodyText>
<figure confidence="0.87009875">
LIST CHROMATIC NUMBER
Input: A graph G = (V, E) of treewidth at most t, and a positive integer r.
Parameter: t
Question: Is χl(G) ≤ r?
LIST COLORING
Input: A graph G = (V, E) of treewidth at most t, and for each vertex v ∈ V ,
a list L(v) of permitted colors.
Parameter: t
</figure>
<bodyText confidence="0.4181065">
Question: Is there a proper vertex coloring c with c(v) ∈ L(v) for each v?
PRECOLORING EXTENSION
Input: A graph G = (V, E) of treewidth at most t, a subset W ⊆ V of precol-
ored vertices, a precoloring cW of the vertices of W, and a positive integer r.
</bodyText>
<equation confidence="0.683216833333333">
Parameter: t
Question: Is there a proper vertex coloring c of V which extends cW (that is,
c(v) = cW (v) for all v ∈ W), using at most r colors?
EQUITABLE COLORING (ECP)
Input: A graph G = (V, E) of treewidth at most t and a positive integer r.
Parameter: t
</equation>
<bodyText confidence="0.9618368">
Question: Is there a proper vertex coloring c using at most r colors, with the
property that the sizes of any two color classes differ by at most one?
Previous Results. LIST COLORING is NP-complete, even for very restricted classes
of graphs, such as complete bipartite graphs [JS97]. Jansen and Scheffler described a
dynamic programming algorithm for the problem that runs in time O(nt+2) for graphs
</bodyText>
<page confidence="0.899747">
2
</page>
<bodyText confidence="0.9997985">
of treewidth at most t [JS97]. PRECOLORING EXTENSION is NP-complete, and can
also be solved in time O(nt+2) for graphs of treewidth at most t [JS97]. The LIST
CHROMATIC NUMBER problem is 17p2 -complete for any fixed r &gt; 3, a result attributed
to Gutner and Tarsi [Tu97]. There does not appear to have been any previous result
on the complexity of the LIST CHROMATIC NUMBER problem for graphs of bounded
treewidth.
</bodyText>
<subsectionHeader confidence="0.909074">
Some Background on Parameterized Complexity.
</subsectionHeader>
<bodyText confidence="0.980623724137931">
Parameterized complexity is basically a two-dimensional generalization of “P vs.
NP” where in addition to the overall input size n, one studies the effects on compu-
tational complexity of a secondary measurement that captures additional relevant in-
formation. This additional information can be, for example, a structural restriction on
the input distribution considered, such as a bound on the treewidth of an input graph.
Parameterization can be deployed in many different ways; for general background on
the theory see [DF99,FG06,Nie06].
The two-dimensional analogue (or generalization) of P, is solvability within a time
bound of O(f (k)nc), where n is the total input size, k is the parameter, f is some
(usually computable) function, and c is a constant that does not depend on k or n. Pa-
rameterized decision problems are defined by specifying the input, the parameter, and
the question to be answered. A parameterized problem that can be solved in such time
is termed fixed-parameter tractable (FPT). There is a hierarchy of intractable parame-
terized problem classes above FPT, the main ones are:
FPT C M[1] C W[1] C M[2] C W[2] C • • • C W[P] C XP
The principal analogue of the classical intractability class NP is W [1], which is a strong
analogue, because a fundamental problem complete for W[1] is the k-STEP HALTING
PROBLEM FOR NONDETERMINISTIC TURING MACHINES (with unlimited nondeter-
minism and alphabet size) — this completeness result provides an analogue of Cook’s
Theorem in classical complexity. A convenient source of W[1]-hardness reductions is
provided by the result that k-CLIQUE is complete for W[1]. Other highlights of the the-
ory include that k-DOMINATING SET, by contrast, is complete for W[2]. FPT = M[1]
if and only if the Exponential Time Hypothesis fails. XP is the class of all problems that
are solvable intime O(ng(k)).
The principal “working algorithmics” way of showing that a parameterized problem
is unlikely to be fixed-parameter tractable is to prove W [1]-hardness. The key property
of a parameterized reduction between parameterized problems 17 and 17&apos; is that the
input (x, k) to 17 should be transformed to input (x&apos;, k&apos;) for 17&apos;, so that the receiving
parameter k&apos; is a function only of the parameter k for the source problem.
</bodyText>
<subsectionHeader confidence="0.989422">
1.1 LIST CHROMATIC NUMBER Parameterized by Treewidth is FPT
</subsectionHeader>
<bodyText confidence="0.99722375">
The notion of the list chromatic number (also known as the choice number) of a graph
was introduced by Vizing in 1976 [Viz76], and independently by Erdös, Rubin and
Taylor in 1980 [ERT80]. A celebrated result that gave impetus to the area was proved
by Thomassen: every planar graph has list chromatic number at most five [Th94].
</bodyText>
<page confidence="0.96012">
3
</page>
<bodyText confidence="0.999812">
We describe an algorithm for the LIST CHROMATIC NUMBER problem that runs in
linear time for any fixed treewidth bound t. Our algorithm employs the machinery of
Monadic Second Order (MSO) logic, due to Courcelle [Cou90] (also [ALS91,BPT92]).
At a glance, this may seem surprising, since there is no obvious way to describe the
problem in MSO logic — one would seemingly have to quantify over all possible list
assignments to the vertices of G, and the vocabulary of MSO seems not to provide
any way to do this. We employ a “trick” that was first described (to our knowledge) in
[BFLRRW06], with further applications described in [CFRRRS07,FGKPRWY07].
The essence of the trick is to construct an auxiliary graph that consists of the original
input, augmented with additional semantic vertices, so that the whole ensemble has
— or can safely be assumed to have — bounded treewidth, and relative to which the
problem of interest can be expressed in MSO logic.
A list assignment L with |L(v) |&gt; r for all v E V is termed an r-list assignment. A
list assignment L from which G cannot be properly colored is called bad. Thus, a graph
G does not have list chromatic number χl(G) &lt; r, if and only if there is a bad r-list
assignment for G.
The following lemma is crucial to the approach.
</bodyText>
<construct confidence="0.927035">
Lemma 1. If a graph of treewidth at most t admits any bad r-list assignment, then it
admits a bad list assignment where the colors are drawnfrom a set of (2t + 1)r colors.
</construct>
<bodyText confidence="0.9992192">
Proof. First of all, we may note that if G has treewidth bounded by t, then χl(G) &lt; t+1
(and similarly, the chromatic number of G is at most t + 1). This follows easily from
the inductive definition of t-trees. We can therefore assume that r &lt; t.
Fix attention on a width t tree decomposition D for G, where the bags of the decom-
position are indexed by the tree T. For a node t of T, let D(t) denote the bag associated
to the node t. Suppose that L is a bad r-list assignment for G, and let C denote the union
of the lists of L. For a color α E C, let Tα denote the subforest of T induced by the set
of vertices t of T for which D(t) contains a vertex v of G, where the color α occurs in
the list L(v). Let T (α) denote the set of trees of the forest Tα. Let T denote the union
of the sets T (α), taken over all of the colors α that occur in the list assignment L:
</bodyText>
<equation confidence="0.832014">
�T = T (α)
αce
</equation>
<bodyText confidence="0.999888916666667">
We consider that two trees T&apos; and T&apos;&apos; in T are adjacent if the distance between T&apos;
and T&apos;&apos; in T is at most one. Note that T&apos; and T&apos;&apos; might not be disjoint, so the distance
between them can be zero. Let 9 denote the graph thus defined: the vertices of 9 are
the subtrees in T and the edges are given by the above adjacency relationship.
Suppose that 9 can be properly colored by the coloring function c&apos; : T → C&apos;. We
can use such a coloring to describe a modified list assignment L&apos;[c&apos;] to the vertices of G
in the following way: if T&apos; E T (α) and c&apos;(T&apos;) = α&apos; E C&apos;, then replace each occurrence
of the color α on the lists L(v), for all vertices v that belong to bags D(t), where t E T&apos;,
with the color α&apos;.
This specification of L&apos;[c&apos;] is consistent, because for any vertex v such that α E
L(v), there is exactly one tree T&apos; E T (α) such that v belongs to a bag indexed by
vertices of T&apos;.
</bodyText>
<page confidence="0.889507">
4
</page>
<bodyText confidence="0.991946714285714">
Claim 1. If c&apos; is a proper coloring of g, and L is a bad list assignment for G, then L&apos;[c&apos;]
is also a bad list assignment for G.
This follows because the trees in g preserve the constraints expressed in having a
given color on the lists of adjacent vertices of G, while the new colors α&apos; can only be
used on two different trees T&apos; and T&apos;&apos; when the vertices of G in the bags associated
with these trees are at a distance of at least two in g.
Claim 2. The graph g has treewidth at most 2(t + 1)r − 1.
A tree decomposition D&apos; for g of width at most 2(t + 1)r can be described as
follows. Subdivide each edge tt&apos; of T with a node of degree two denoted s(t, t&apos;). Assign
to each node t the bag D&apos;(t) consisting of those trees T&apos; of g that include t. There
are at most (t + 1)r such trees. Assign to each node s(t, t&apos;) the bag D&apos;(s(t, t&apos;)) =
D&apos;(t) U D&apos;(t&apos;). It is straightforward to verify that this satisfies the requirements of a tree
decomposition for g.
The lemma now follows from the fact that g can be properly colored with 2(t + 1)r
</bodyText>
<equation confidence="0.482861333333333">
colors. ❑
Theorem 1. The LIST CHROMATIC NUMBER problem, parameterized by the treewidth
bound t, is fixed-parameter tractable, solvable in linear time for everyfixed t.
</equation>
<bodyText confidence="0.998930631578947">
Proof. The algorithm consists of the following steps.
Step 1. Compute in linear time, using Bodlaender’s algorithm, a tree-decomposition for
G of width at most t. Consider the vertices of G to be of type 1.
Step 2. Introduce 2(t + 1)r new vertices of type 2, and connect each of these to all
vertices of G. The treewidth of this augmented graph is at most t + 2(t + 1)r = O(t2).
Step 3. The problem can now be expressed in MSO logic. That this is so, is not entirely
trivial, and is argued as follows (sketch). We employ a routine extension of MSO logic
that provides predicates for the two types of vertices.
If G admits a bad r-list assignment, then this is witnessed by a set of edges F
between vertices of G (that is, type 1 vertices) and vertices of type 2 (that represent the
colors), such that every vertex v of G has degree r relative to F. Thus, the r incident
F-edges represent the colors of Lv. It is routine to assert the existence of such a set of
edges in MSO logic.
The property that such a set of edges F represents a bad list assignment can be
expressed as: “For every subset F&apos; C F such that every vertex of G has degree 1
relative to F&apos; (and thus, F&apos; represents a choice of a color for each vertex, chosen from
its list), there is an adjacent pair of vertices u and v of G, such that the represented color
choice is the same, i.e., u and v are adjacent by edges of F&apos; to the same type 2 (color-
representing) vertex.” The translation of this statement into formal MSO is routine. ❑
</bodyText>
<sectionHeader confidence="0.846153" genericHeader="method">
2 Some Coloring Problems That Are Hard for Treewidth
</sectionHeader>
<bodyText confidence="0.997">
We tend to think that “all” (or almost all) combinatorial problems are easy for bounded
treewidth, but in the case of structured coloring problems, the game is more varied in
outcome .
</bodyText>
<sectionHeader confidence="0.454819" genericHeader="method">
5
</sectionHeader>
<subsectionHeader confidence="0.9612925">
2.1 LIST COLORING and PRECOLORING EXTENSION are W[1]-Hard,
Parameterized by Treewidth
</subsectionHeader>
<bodyText confidence="0.999405722222222">
There is a relatively simple reduction to the LIST COLORING and PRECOLORING EX-
TENSION problems from the MULTICOLORED CLIQUE problem. The MULTICOLORED
CLIQUE problem is known to be W [1]-complete [FHR07] (by a simple reduction from
the ordinary CLIQUE). The MULTICOLORED CLIQUE problem takes as input a graph
G together with a proper k-coloring of the vertices of G, and is parameterized by k.
The question is whether there is a k-clique in G consisting of exactly one vertex of each
color.
As example of the reduction is shown in Figure 1. The figure shows, for the param-
eter value k = 4, the construction of an instance G&apos; of LIST COLORING that admits a
proper choice of color from each list if and only if the source instance G has a multicolor
k-clique.
The general construction can be easily infered from the example in Figure 1. The
colors on the lists are in 1:1 correspondence with the vertices of G. There are k vertices
v[i], i = 1, ..., k, one for each color class of G, and the list assigned to v[i] consists of
the colors corresponding to the vertices in G of color i. For i =6 j, there are various
vertices of degree two in G&apos;, each having a list of size 2. There is one such degree two
vertex in G&apos; for each pair x, y of nonadjacent vertices, where x has color i and y has
color j.
</bodyText>
<figureCaption confidence="0.994597">
Fig. 1. Example of the reduction from MULTICOLOR CLIQUE to LIST COLORING.
</figureCaption>
<bodyText confidence="0.9961635">
Verification that the reduction works correctly is easy, and is left to the reader. The
treewidth of G&apos; is bounded by k + 1.
</bodyText>
<figure confidence="0.971443441176471">
Theorem 2. LIST COLORING parameterized by treewidth is W [1]-hard.
a
1 2
c
1
h
4
d e
3 4
g
3
(c, f)
(i, b)
1
f
1
2
(b, f)
(b, g)
(f, h)
(a, g)
(c, d)
(i, d)
(a, h)
(c, e)
(d, h)
(d, g)
3
(e, h)
4
(a, f)
(a, c, i)
2
i
</figure>
<page confidence="0.933788">
6
</page>
<bodyText confidence="0.9568554">
To see that PRECOLORING EXTENSION is also W[1]-hard when parameterized by
treewidth, we can reduce from the LIST COLORING problem, simply using many pre-
colored vertices of degree 1 to enforce the lists. This construction does not increase the
treewidth. We have:
Theorem 3. PRECOLORING EXTENSION parameterized by treewidth is W [1]-hard.
</bodyText>
<subsectionHeader confidence="0.961037">
2.2 EQUITABLE COLORING is W[1]-Hard Parameterized by Treewidth
</subsectionHeader>
<bodyText confidence="0.996777166666666">
The notion of equitable coloring seems to have been first introduced by Meyer in 1973,
where an application to scheduling garbage trucks is described [Mey73]. Recently, Bod-
laender and Fomin have shown that determining whether a graph of treewidth at most t
admits an equitable coloring, can be solved in time O(nO(t)) [BF05].
We consider the parameterized complexity of EQUITABLE COLORING (ECP) in
graphs with bounded treewidth. We actually prove a stronger result than the one we
have so far stated. We show that when ECP is parameterized by (t, r), where t is the
treewidth bound, and r is the number of color classes, then the problem is W[1]-hard.
To show the desired reduction, we introduce two more general problems. List ana-
logues of equitable coloring have been previously studied by Kostochka, et al. [KPW03].
The LIST EQUITABLE COLORING PROBLEM (LECP): Given an input graph G =
(V, E), lists Lv of colors for every vertex v ∈ V and a positive integer r; does there
exist a proper coloring f of G with r colors that for every vertex v ∈ V uses a
color from its list Lv such that for any two color class, Vi and Vj of the coloring f,
||Vi |− |Vj ||≤ 1?
The NUMBER LIST COLORING PROBLEM (NLCP): Given an input graph G =
(V, E), lists Lv of colors for every vertex v ∈ V , a function h : ∪vcV Lv → N,
associating a number to each color, and a positive integer r; does there exist a proper
coloring f of G with r colors that for every vertex v ∈ V uses a color from its list
Lv, such that any color class Vc of the coloring f is of size h(c)?
Our main effort is in the reduction of the M ULTICOLOR CLIQUE problem to NLCP.
Consider that the instance G = (V, E) of MULTICOLOR CLIQUE has its vertices col-
ored by the integers 1, ..., k. Let V [i] denote the set of vertices of color i, and let E[i, j],
for 1 ≤ i &lt; j ≤ k, denote the set of edges e = uv, where u ∈ V [i] and v ∈ V [j].
We can assume that |V [i] |= N for all i, and that |E[i, j] |= M for all i &lt; j, that
is, we can assume that the vertex color classes of G, and also the edge sets between
them, have uniform sizes. (For a simple justification of this assumption, we can reduce
MULTICOLOR CLIQUE to itself, taking a union of k! disjoint copies of G, one for each
permutation of the color set.)
We will use following sets of colors in our construction of an instance of NLCP:
</bodyText>
<listItem confidence="0.996319">
(1) S = {σ[i, j] : 1 ≤ i =6 j ≤ k}
(2) S&apos; = {σ&apos;[i, j] : 1 ≤ i =6 j ≤ k}
(3) T = {τi[r, s] : 1 ≤ i ≤ k, 1 ≤ r &lt; s ≤ k, r =6 i, s =6 i}
(4)T&apos;={τi&apos;[r,s]:1≤i≤ k, 1≤ r&lt;s≤k,r=6i,s=6i}
(5) E = {E[i, j] : 1 ≤ i &lt; j ≤ k}
(6) E&apos; = {e&apos;[i, j] : 1 ≤ i &lt; j ≤ k}
</listItem>
<page confidence="0.944343">
7
</page>
<bodyText confidence="0.943903954545455">
Note that |S |= |S&apos; |= 2(k ), that is, there are distinct colors σ[2, 3] and σ[3, 2], etc.
2
In contrast, the colors τi[r, s] are only defined for r &lt; s.
We associate with each vertex and edge of G a pair of (unique) identification num-
bers. The up-identification number v[up] for a vertex v should be in the range [n2 +
1, n2 + n], if G has n vertices. Similarly, the up-identification number e[up] of an edge
e of G can be assigned (arbitrarily, but uniquely) in the range [2n2 + 1, 2n2 + m],
assuming G has m edges.
Choose a suitably large positive integer Z0, for example Z0 = n3, and define the
down-identification number v[down] for a vertex v to be Z0 − v[up], and similarly for
the edges e of G, define the down-identification number e[down] to be Z0 − e[up].
Choose a second large positive integer, Z1 &gt;&gt; Z0, for example, we may take
Z1 = n6.
Next we describe various gadgets and the way they are combined in the reduction.
First we describe the gadget which encodes the selection of the edge going between
two particular color classes in G. In other words, we will think of the representation
of a k-clique in G as involving the selection of edges (with each edge selected twice,
once in each direction) between the color classes of vertices in G, with gadgets for
selection, and to check two things: (1) that the selections in opposite color directions
match, and (2) that the edges chosen from color class V [i] going to V [j] (for the various
j =6 i) all emanate from the same vertex in V [i]. (This is sometimes termed an edge
representation strategy for the parameterized reduction from MULTICOLOR CLIQUE.)
</bodyText>
<equation confidence="0.536360666666667">
There are 2(k ) groups of gadgets, one for each pair of color indices i =6 j. If 1 &lt;
2
i &lt; j &lt; k, then we will refer to the gadgets in the group G[i, j] as forward gadgets, and
</equation>
<bodyText confidence="0.895275863636364">
we will refer to the gadgets in the group G[j, i] as backward gadgets.
If e E E[i, j], then there is one forward gadget corresponding to e in the group
G[i, j], and one backward gadget corresponding to e in the group G[j, i]. The construc-
tion of these gadgets is described as follows.
The forward gadget corresponding to e = uv E E[i, j].
The gadget has a root vertex r[i, j, e], and consists of a tree of height 2. The list assigned
to this root vertex contains two colors: σ[i, j] and σ&apos;[i, j]. The root vertex has Z1 + 1
children, and each of these is also assigned the two-element list containing the colors
σ[i, j] and σ&apos;[i, j]. One of the children vertices is distinguished, and has 2(k −1) groups
of further children:
– e[up] children assigned the list {σ&apos;[i, j], E[i, j]}.
– e[down] children assigned the list {σ&apos;[i, j], E&apos;[i, j]}.
– For each r in the range j &lt; r &lt; k, u[up] children assigned the list {σ&apos;[i, j], τi[j, r]}.
– For each r in the range j &lt; r &lt; k, u[down] children assigned {σ&apos;[i, j], τi&apos; [j, r]}.
– For each r in the range 1 &lt; r &lt; j, u[down] children assigned {σ&apos;[i, j], τi[r, j]}.
– For each r in the range 1 &lt; r &lt; j, u[up] children assigned the list {σ&apos;[i, j], τ&apos;i[r, j]}.
The backward gadget corresponding to e = uv E E[i, j].
The gadget has a root vertex r[j, i, e], and consists of a tree of height 2. The list assigned
to this root vertex contains two colors: σ[j, i] and σ&apos;[j, i]. The root vertex has Z1 + 1
children, and each of these is also assigned the two-element list containing the colors
σ[j, i] and σ&apos;[j, i]. One of the children vertices is distinguished, and has 2k groups of
further children:
</bodyText>
<page confidence="0.971645">
8
</page>
<table confidence="0.649971142857143">
– e[up] children assigned the list {σ&apos;[j, i], E&apos;[i, j]}.
– e[down] children assigned the list {σ&apos;[j, i], E[i, j]}.
– For each r in the range i &lt; r &lt; k, v[up] children assigned the list {σ&apos;[j, i], τj[i, r]}.
– For each r in the range i &lt; r &lt; k, v[down] children assigned {σ&apos;[j, i], τ&apos;j[i, r]}.
– For each r in the range 1 &lt; r &lt; i, v[down] children assigned {σ&apos;[j, i], τj[r, i]}.
– For each r in the range 1 &lt; r &lt; i, v[up] children assigned the list {σ&apos;[j, i], τ&apos;j[r, i]}.
The numerical targets.
</table>
<listItem confidence="0.972903444444444">
(1) Each color in T U T&apos; has the target: Z0.
(2) Each color in E U E&apos; has the target: Z0.
(3) Each color in S has the target: (M − 1)(Z, + 1) + 1.
(4) Each color in S&apos; has the target: (M − 1) + (Z, + 1) + (k − 1)(M − 1)Z0.
That completes the formal description of the reduction from M ULTICOLOR CLIQUE
to NLCP. We turn now to some motivating remarks about the design of the reduction.
Remarks on the colors, their numerical targets, and their role in the reduction.
(1) There are 2(k) groups of gadgets. Each edge of G gives rise to two gadgets. Between
any two color classes of G there are precisely M edges, and therefore M · (k
</listItem>
<bodyText confidence="0.450175">
2 ) edges
</bodyText>
<page confidence="0.443557">
2
</page>
<bodyText confidence="0.961695517241379">
in G in total. Each group of gadgets therefore contains M gadgets. The gadgets in each
group have two “helper” colors. For example, the group of gadgets 9[4, 2] has the helper
colors σ[4, 2] and σ&apos;[4, 2]. The role of the gadgets in this group is to indicate a choice
of an edge going from a vertex in the color class V [4] of G to a vertex in the color class
V [2] of G. The role of the 2(k ) groups of gadgets is to represent the selection of (k )
2 2
edges of G that form a k-clique, with each edge chosen twice, once in each direction. If
i &lt; j then the choice is represented by the coloring of the gadgets in the group 9[i, j],
and these are theforward gadgets of the edge choice. If j &lt; i, then the gadgets in 9[i, j]
are backward gadgets (representing the edge selection in the opposite direction, relative
to the ordering of the color classes of G). The numerical targets for the colors in S U S&apos;
are chosen to force exactly one edge to be selected (forward or backward) by each group
of gadgets, and to force the gadgets that are colored in a way that indicates the edge was
not selected into being colored in a particular way (else the numerical targets cannot be
attained). The numerical targets for these colors are complicated, because of this role
(which is asymmetric between the pair of colors σ[i, j] and σ&apos;[i, j]).
(2) The colors in T U T&apos; and E U E&apos; are organized in symmetric pairs, and each pair
is used to transmit (and check) information. Due to the enforcements alluded to above,
each “selection” coloring of a gadget (there will be only one possible in each group of
gadgets), will force some numbers of vertices to be colored with these pairs of colors,
which can be thought of as an information transmission. For example, when a gadget in
9[4, 2] is colored with a “selection” coloring, this indicates that the edge from which the
gadget arises is selected as the edge from the color class V [4] of G, to the color class
V [2]. There is a pair of colors that handles the information transmission concerning
which edge is selected between the groups 9[2, 4] and 9[4, 2]. (Of course, something
has to check that the edge selected in one direction, is the same as the edge selected in
the other direction.) There is something neat about the dual-color transmission channel
for this information. Each vertex and edge has two unique identification numbers, “up”
and “down”, that sum to Z0. To continue the concrete example, 9[4, 2] uses the (number
</bodyText>
<page confidence="0.952134">
9
</page>
<bodyText confidence="0.998902311111111">
of vertices colored by the) pair of colors E[2,4] and E&apos;[2,4] to communicate to G[2, 4]
about the edge selected. The signal from one side consists of e[up] vertices colored
e[2, 4] and e[down] vertices colored e&apos;[2, 4]. The signal from the other side consists of
e[down] vertices colored e[2, 4] and e[up] vertices colored e&apos;[2, 4]. Thus the numerical
targets for these colors allow us to check whether the same edge has been selected in
each direction (if each color target of Z0 is met). There is the additional advantage that
the amount of signal in each direction is the same: in each direction a total of Z0 colored
vertices, with the two paired colors, constitutes the signal. This means that, modulo the
discussion in (1) above, when an edge is not selected, the corresponding non-selection
coloring involves uniformly the same number (i.e., Z0) of vertices colored “otherwise”
for each of the (M − 1) gadgets colored in the non-selection way: this explains (part
of) the (k − 1)(M − 1)Z0 term in (4) of the numerical targets.
(3) In a similar manner to the communication task discussed above, each of the k − 1
groups of gadgets G[i, ] need to check that each has selected an edge from V [i] that
originates at the same vertex in V [i]. Hence there are pairs of colors that provide a
communication channel similar to that in (2) for this information. This role is played
by the colors in T ∪ T&apos;. (Because of the bookkeeping issues, this becomes somewhat
intricate in the formal definition of the reduction.)
The above remarks are intended to aid an intuitive understanding of the reduction.
We now return to a more formal argument.
Claim 1. If G has a k-multicolor clique, then G&apos; is a yes-instance to NLCP.
The proof of this claim is relatively straightforward. The gadgets corresponding to
the edges of a k-clique in G are colored in a manner that indicates “selected” (for both
the forward and the backward gadgets) and all other gadgets are colored in manner
that indicates “non-selected”. The coloring that corresponds to “selected” colors the
root vertex with the color σ[i, j], and this forces the rest of the coloring of the gadget.
The coloring that corresponds to “non-selected” colors the root vertex with the color
σ&apos;[i, j]. In this case the coloring of the rest of the gadget is not entirely forced, but if the
grandchildren vertices of the gadget are also colored with σ&apos;[i, j], then all the numerical
targets will be met.
Claim 2. Suppose that Γ is a list coloring of G&apos; that meets all the numerical targets.
Then in each group of gadgets, exactly one gadget is colored in a way that indicates
“selection”.
We argue this as follows. There cannot be two gadgets in any group colored in the
“selection” manner, since this would make it impossible to meet the numerical target
for a color in S. If no gadget is colored in the “selection” manner, then again the targets
cannot be met for the colors in S ∪ S&apos; used in the lists for this group of gadgets.
Claim 3. Suppose that Γ is a list coloring of G&apos; that meets all the numerical targets.
Then in each group of gadgets, every gadget that is not colored in a way that indicates
“selection” must have all of its grandchildren vertices colored with the appropriate color
in S&apos;.
Claim 3 follows from Claim 2, noting that the numerical targets for the S&apos; colors
cannot be met unless this is so.
It follows from Claims 2 and 3, that if Γ is a list coloring of G&apos; that meets all
the numerical targets, then in each group of gadgets, exactly one gadget is colored in
</bodyText>
<page confidence="0.935147">
10
</page>
<bodyText confidence="0.975663">
the “selection” manner, and all other gadgets are colored in a completely determined
“nonselection” manner. Each “selection” coloring of a gadget produces a numerical
signal (based on vertex and edge identification numbers) carried by the colors in T ∪ T&apos;
and E ∪ E&apos;, with two signals per color. The target of Z0 for these colors can only be
achieved if the selection colorings indicate a clique in G.
Theorem 4. NLCP is W[1]-hardfor trees, parameterized by the number of colors that
appear on the lists.
The reduction from NLCP to LECP is almost trivial, achieved by padding with
isolated vertices having single-color lists.
The reduction from LECP to ECP is described as follows. Create a clique of size r,
the number of colors occuring on the lists, and connect the vertices of this clique to the
vertices of G&apos; in a manner that enforces the lists. Since G&apos; is a tree, the treewidth of the
resulting graph is at most r. We have:
Theorem 5. EQUITABLE COLORING is W [1]-hard, parameterized by treewidth.
</bodyText>
<sectionHeader confidence="0.998004" genericHeader="discussions">
3 Discussion and Open Problems
</sectionHeader>
<bodyText confidence="0.999905">
Structured optimization problems, such as the coloring problems considered here, have
strong claims with respect to applications. A source of discussion of these applications
is the recent dissertation of Marx [Ma04]. It seems interesting and fruitful to consider
such problems from the parameterized point of view, and to investigate how such extra
problem structure (which tends to increase both computational complexity, and real-
world applicability) interacts with parameterizations (such as bounded treewidth), that
frequently lead to tractability.
The outcome of the investigation here of some well-known locally and globally
constrained coloring problems has turned up a few surprises: first of all, that the L IST
CHROMATIC NUMBER problem is actually FPT, when we parameterize by treewidth.
It is also somewhat surprising that this good news does not extend to L IST COLORING,
PRECOLORING EXTENSION or EQUITABLE COLORING, all of which turn out to be
hard for W[1].
There are many interesting open problems concerning the parameterized complex-
ity of “more structured” combinatorial optimization problems on graphs, parametered
by treewidth. We mention the following two:
</bodyText>
<listItem confidence="0.775594666666667">
(1) Is the LIST EDGE CHROMATIC NUMBER problem fixed-parameter tractable, pa-
rameterized by treewidth?
(2) One can formulate a “list analogue” of the HAMILTONIAN PATH problem as fol-
</listItem>
<bodyText confidence="0.693133">
lows: each vertex is assigned a list that is a subset of {1, 2, ..., n} indicating the positions
in the ordering of the n vertices implicit in a Hamiltonian path that are permitted to the
vertex. Is the LIST HAMILTONIAN PATH problem FPT, parameterized by treewidth?
</bodyText>
<sectionHeader confidence="0.998665" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999673">
[Al00] N. Alon. Restricted colorings of graphs. In: Surveys in Combinatorics 1993 (K. Walker,
ed.), London Math. Soc. Lecture Notes Series 187 (Cambridge Univ. Press, 1993), 1–33.
</reference>
<page confidence="0.605013">
11
</page>
<reference confidence="0.999955244897959">
[ALS91] S. Arnborg, J. Lagergren and D. Seese. Easy problems for tree-decomposable graphs.
J. Algorithms 12 (1991), 308–340.
[BF05] H. L. Bodlaender and F. V. Fomin. Equitable colorings of bounded treewidth graphs.
Theoretical Computer Science 349 (2005), 22–30.
[BFLRRW06] H. L. Bodlaender, M. Fellows, M. Langston, M. A. Ragan, F. Rosamond and M.
Weyer. Quadratic kernelization for convex recoloring of trees. Proceedings COCOON 2007,
Springer-Verlag, Lecture Notes in Computer Science , 2007, to appear.
[BPT92] R. B. Borie, R. G. Parker and C. A. Tovey. Automatic generation of linear-time al-
gorithms from predicate calculus descriptions of problems on recursively generated graph
families. Algorithmica 7 (1992), 555–581.
[CFRRRS07] B. Chor, M. Fellows, M. A. Ragan, I. Razgon, F. Rosamond and S. Snir. Connected
coloring completion for general graphs: algorithms and complexity. Proceedings COCOON
2007, Springer-Verlag, Lecture Notes in Computer Science , 2007, to appear.
[Cou90] B. Courcelle. The monadic second-order logic of graphs I: Recognizable sets of finite
graphs. Information and Computation, 85:12–75, 1990.
[DF99] R. G. Downey and M. R. Fellows. Parameterized Complexity. Springer-Verlag, 1999.
[ERT80] P. Erdös, A. L. Rubin and H. Taylor. Choosability in graphs. Congressus Numerantium
26 (1980), 122–157.
[FG06] J. Flum and M. Grohe, Parameterized Complexity Theory, Springer-Verlag, 2006.
[FGKPRWY07] M. Fellows, P. Giannopoulos, C. Knauer, C. Paul, F. Rosamond, S. Whitesides
and N. Yu. The lawnmower and other problems: applications of MSO logic in geometry.
Manuscript, 2007.
[FHR07] M. Fellows, D. Hermelin and F. Rosamond. On the fixed-parameter intractability and
tractability of multiple-interval graph properties. Manuscript, 2007.
[JS97] K. Jansen and P. Scheffler. Generalized colorings for tree-like graphs. Discrete Applied
Mathematics 75 (1997), 135–155.
[JT95] T. R. Jensen and B. Toft. Graph Coloring Problems. Wiley Interscience, 1995.
[KPW03] A. V. Kostochka, M. J. Pelsmajer and D. B. West. A list analogue of equitable coloring.
Journal of Graph Theory 44 (2003), 166–177.
[KTV98] J. Kratochvil, Z. Tuza and M. Voigt. New trends in the theory of graph colorings:
choosability and list coloring. In: Contemporary Trends in Discrete Mathematics (from DI-
MACS and DIMATIA to the future) (R. Graham, et al., eds.), DIMACS Series in Discrete
Mathematics and Theoretical Computer Science, vol. 49 (AMS, Providence, 1999), 183–
197.
[Ma04] D. Marx. Graph coloring with local and global constraints. Ph.D. dissertation, Depart-
ment of Computer Science and Information Theory, Budapest University of Technology and
Economics, 2004.
[Mey73] W. Meyer. Equitable coloring. American Mathematical Monthly 80 (1973), 920–922.
[Nie06] R. Niedermeier. Invitation to Fixed Parameter Algorithms. Oxford University Press,
2006.
[Th94] C. Thomassen. Every planar graph is 5-choosable. J. Combinatorial Theory Ser. B 62
(1994), 180–181.
[Tu97] Z. Tuza. Graph colorings with local constraints — A survey. Discussiones Mathematicae
– Graph Theory 17 (1997), 161–228.
[Viz76] V. G. Vizing. Coloring the vertices of a graph in prescribed colors. Metody Diskret. Anal.
v Teorii Kodov i Schem 29 (1976), 3–10. (In Russian.)
[Wo01] D. R. Woodall. List colourings of graphs, in: Surveys in Combinatorics 2001 (J. W. P.
Hirschfeld, ed.) London Math. Soc. Lecture Notes Series 288 (Cambridge Univ. Press, 2001),
269–301.
</reference>
<page confidence="0.956838">
12
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.029067">
<title confidence="0.897793">On the Complexity of Some Colorful by Treewidth</title>
<author confidence="0.8014495">Fedor V Daniel Frances Stefan</author>
<author confidence="0.8014495">Carsten</author>
<address confidence="0.515146666666667">of Newcastle, Newcastle, of Informatics, University of Bergen, Bergen, of Mathematical Sciences, Chennai,</address>
<email confidence="0.916553">saket@imsc.res.in</email>
<affiliation confidence="0.97556">of Computer Science, Durham University, Durham,</affiliation>
<email confidence="0.989135">stefan.szeider@durham.ac.uk</email>
<affiliation confidence="0.873525">Institute, Danish Technical University, Lyngby,</affiliation>
<abstract confidence="0.93879762962963">C.Thomassen@mat.dtu.dk study the complexity of several coloring problems on graphs, paby the treewidth the graph: The chromatic number a graph defined to be the smallpositive integer such that for every assignment to the vertices of list colors, where each list has length at least there is a choice of one from each vertex list a proper coloring of We show that the of determining whether the is solvable in linear time for every fixed treewidth bound The method by which this is shown is new and of general applicability. The takes as input a graph together with an to each vertex a set of colors The problem is to determine it is possible to choose a color for vertex the set of permitted for each vertex, so that the obtained coloring of proper. We show this problem is parameterized by the treewidth of The closely is also shown to be parameterized by treewidth. An coloring a graph a proper coloring of the vertices where the numbers of vertices having any two distinct colors differs by at most one. We that the problem is hard for parameterized by We also show a list-based variation, for trees, parameterized by the number of colors on the lists. Complexity, Bounded Treewidth, Graph Coloring research has been supported by the Australian Research Council through the Australian Centre in Bioinformatics. The first author also acknowledges the support provided by a Fellowship to the Institute of Advanced Studies, Durham University, and the support of the Informatics Institute at the University of Bergen during an extended visit.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>N Alon</author>
</authors>
<title>Restricted colorings of graphs. In:</title>
<date>1993</date>
<booktitle>Surveys in Combinatorics</booktitle>
<pages>1--33</pages>
<editor>(K. Walker, ed.),</editor>
<publisher>Press,</publisher>
<marker>[Al00]</marker>
<rawString>N. Alon. Restricted colorings of graphs. In: Surveys in Combinatorics 1993 (K. Walker, ed.), London Math. Soc. Lecture Notes Series 187 (Cambridge Univ. Press, 1993), 1–33.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Arnborg</author>
<author>J Lagergren</author>
<author>D Seese</author>
</authors>
<title>Easy problems for tree-decomposable graphs.</title>
<date>1991</date>
<journal>J. Algorithms</journal>
<volume>12</volume>
<pages>308--340</pages>
<marker>[ALS91]</marker>
<rawString>S. Arnborg, J. Lagergren and D. Seese. Easy problems for tree-decomposable graphs. J. Algorithms 12 (1991), 308–340.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H L Bodlaender</author>
<author>F V Fomin</author>
</authors>
<title>Equitable colorings of bounded treewidth graphs.</title>
<date>2005</date>
<journal>Theoretical Computer Science</journal>
<volume>349</volume>
<pages>22--30</pages>
<contexts>
<context position="16669" citStr="[BF05]" startWordPosition="3000" endWordPosition="3000">ing garbage trucks is described [Mey73]. Recently, Bodlaender and Fomin have shown that determining whether a graph of treewidth at most t admits an equitable coloring, can be solved in time O(nO(t)) [BF05]. We consider the parameterized complexity of EQUITABLE COLORING (ECP) in graphs with bounded treewidth. We actually prove a stronger result than the one we have so far stated. We show that when ECP i</context>
</contexts>
<marker>[BF05]</marker>
<rawString>H. L. Bodlaender and F. V. Fomin. Equitable colorings of bounded treewidth graphs. Theoretical Computer Science 349 (2005), 22–30.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H L Bodlaender</author>
<author>M Fellows</author>
<author>M Langston</author>
<author>M A Ragan</author>
<author>F Rosamond</author>
<author>M Weyer</author>
</authors>
<title>Quadratic kernelization for convex recoloring of trees.</title>
<date>2007</date>
<booktitle>Proceedings COCOON 2007, Springer-Verlag, Lecture Notes in Computer Science ,</booktitle>
<note>to appear.</note>
<contexts>
<context position="8569" citStr="[BFLRRW06]" startWordPosition="1430" endWordPosition="1430">quantify over all possible list assignments to the vertices of G, and the vocabulary of MSO seems not to provide any way to do this. We employ a “trick” that was first described (to our knowledge) in [BFLRRW06], with further applications described in [CFRRRS07,FGKPRWY07]. The essence of the trick is to construct an auxiliary graph that consists of the original input, augmented with additional semantic verti</context>
</contexts>
<marker>[BFLRRW06]</marker>
<rawString>H. L. Bodlaender, M. Fellows, M. Langston, M. A. Ragan, F. Rosamond and M. Weyer. Quadratic kernelization for convex recoloring of trees. Proceedings COCOON 2007, Springer-Verlag, Lecture Notes in Computer Science , 2007, to appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R B Borie</author>
<author>R G Parker</author>
<author>C A Tovey</author>
</authors>
<title>Automatic generation of linear-time algorithms from predicate calculus descriptions of problems on recursively generated graph families.</title>
<date>1992</date>
<journal>Algorithmica</journal>
<volume>7</volume>
<pages>555--581</pages>
<marker>[BPT92]</marker>
<rawString>R. B. Borie, R. G. Parker and C. A. Tovey. Automatic generation of linear-time algorithms from predicate calculus descriptions of problems on recursively generated graph families. Algorithmica 7 (1992), 555–581.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Chor</author>
<author>M Fellows</author>
<author>M A Ragan</author>
<author>I Razgon</author>
<author>F Rosamond</author>
<author>S Snir</author>
</authors>
<title>Connected coloring completion for general graphs: algorithms and complexity.</title>
<date>2007</date>
<booktitle>Proceedings COCOON 2007, Springer-Verlag, Lecture Notes in Computer Science ,</booktitle>
<note>to appear.</note>
<marker>[CFRRRS07]</marker>
<rawString>B. Chor, M. Fellows, M. A. Ragan, I. Razgon, F. Rosamond and S. Snir. Connected coloring completion for general graphs: algorithms and complexity. Proceedings COCOON 2007, Springer-Verlag, Lecture Notes in Computer Science , 2007, to appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Courcelle</author>
</authors>
<title>The monadic second-order logic of graphs I: Recognizable sets of finite graphs.</title>
<date>1990</date>
<journal>Information and Computation,</journal>
<volume>85</volume>
<contexts>
<context position="8200" citStr="[Cou90]" startWordPosition="1364" endWordPosition="1364"> an algorithm for the LIST CHROMATIC NUMBER problem that runs in linear time for any fixed treewidth bound t. Our algorithm employs the machinery of Monadic Second Order (MSO) logic, due to Courcelle [Cou90] (also [ALS91,BPT92]). At a glance, this may seem surprising, since there is no obvious way to describe the problem in MSO logic — one would seemingly have to quantify over all possible list assignmen</context>
</contexts>
<marker>[Cou90]</marker>
<rawString>B. Courcelle. The monadic second-order logic of graphs I: Recognizable sets of finite graphs. Information and Computation, 85:12–75, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R G Downey</author>
<author>M R Fellows</author>
</authors>
<title>Parameterized Complexity.</title>
<date>1999</date>
<publisher>Springer-Verlag,</publisher>
<marker>[DF99]</marker>
<rawString>R. G. Downey and M. R. Fellows. Parameterized Complexity. Springer-Verlag, 1999.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Erdös</author>
<author>A L Rubin</author>
<author>H Taylor</author>
</authors>
<title>Choosability in graphs.</title>
<date>1980</date>
<journal>Congressus Numerantium</journal>
<volume>26</volume>
<pages>122--157</pages>
<contexts>
<context position="7837" citStr="[ERT80]" startWordPosition="1303" endWordPosition="1303">by Treewidth is FPT The notion of the list chromatic number (also known as the choice number) of a graph was introduced by Vizing in 1976 [Viz76], and independently by Erdös, Rubin and Taylor in 1980 [ERT80]. A celebrated result that gave impetus to the area was proved by Thomassen: every planar graph has list chromatic number at most five [Th94]. 3 We describe an algorithm for the LIST CHROMATIC NUMBER </context>
</contexts>
<marker>[ERT80]</marker>
<rawString>P. Erdös, A. L. Rubin and H. Taylor. Choosability in graphs. Congressus Numerantium 26 (1980), 122–157.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Flum</author>
<author>M Grohe</author>
</authors>
<title>Parameterized Complexity Theory,</title>
<date>2006</date>
<publisher>Springer-Verlag,</publisher>
<marker>[FG06]</marker>
<rawString>J. Flum and M. Grohe, Parameterized Complexity Theory, Springer-Verlag, 2006.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Fellows</author>
<author>P Giannopoulos</author>
<author>C Knauer</author>
<author>C Paul</author>
<author>F Rosamond</author>
<author>S Whitesides</author>
<author>N Yu</author>
</authors>
<title>The lawnmower and other problems: applications of MSO logic in geometry.</title>
<date>2007</date>
<tech>Manuscript,</tech>
<marker>[FGKPRWY07]</marker>
<rawString>M. Fellows, P. Giannopoulos, C. Knauer, C. Paul, F. Rosamond, S. Whitesides and N. Yu. The lawnmower and other problems: applications of MSO logic in geometry. Manuscript, 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Fellows</author>
<author>D Hermelin</author>
<author>F Rosamond</author>
</authors>
<title>On the fixed-parameter intractability and tractability of multiple-interval graph properties.</title>
<date>2007</date>
<tech>Manuscript,</tech>
<contexts>
<context position="14432" citStr="[FHR07]" startWordPosition="2575" endWordPosition="2575">idth There is a relatively simple reduction to the LIST COLORING and PRECOLORING EXTENSION problems from the MULTICOLORED CLIQUE problem. The MULTICOLORED CLIQUE problem is known to be W [1]-complete [FHR07] (by a simple reduction from the ordinary CLIQUE). The MULTICOLORED CLIQUE problem takes as input a graph G together with a proper k-coloring of the vertices of G, and is parameterized by k. The quest</context>
</contexts>
<marker>[FHR07]</marker>
<rawString>M. Fellows, D. Hermelin and F. Rosamond. On the fixed-parameter intractability and tractability of multiple-interval graph properties. Manuscript, 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Jansen</author>
<author>P Scheffler</author>
</authors>
<title>Generalized colorings for tree-like graphs.</title>
<date>1997</date>
<journal>Discrete Applied Mathematics</journal>
<volume>75</volume>
<pages>135--155</pages>
<contexts>
<context position="4742" citStr="[JS97]" startWordPosition="793" endWordPosition="793">e property that the sizes of any two color classes differ by at most one? Previous Results. LIST COLORING is NP-complete, even for very restricted classes of graphs, such as complete bipartite graphs [JS97]. Jansen and Scheffler described a dynamic programming algorithm for the problem that runs in time O(nt+2) for graphs 2 of treewidth at most t [JS97]. PRECOLORING EXTENSION is NP-complete, and can als</context>
</contexts>
<marker>[JS97]</marker>
<rawString>K. Jansen and P. Scheffler. Generalized colorings for tree-like graphs. Discrete Applied Mathematics 75 (1997), 135–155.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T R Jensen</author>
<author>B Toft</author>
</authors>
<title>Graph Coloring Problems. Wiley Interscience,</title>
<date>1995</date>
<contexts>
<context position="2947" citStr="[JT95]" startWordPosition="461" endWordPosition="461"> areas as operations research, scheduling and computational biology, and also have a long mathematical history. For recent surveys of the area one can turn to [Tu97,KTV98,Al00,Wo01] and also the book [JT95]. In this paper we study the computational complexity of such problems, for graphs of bounded treewidth, in the framework of parameterized complexity [DF99,Nie06], where we take the parameter to be th</context>
</contexts>
<marker>[JT95]</marker>
<rawString>T. R. Jensen and B. Toft. Graph Coloring Problems. Wiley Interscience, 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A V Kostochka</author>
<author>M J Pelsmajer</author>
<author>D B West</author>
</authors>
<title>A list analogue of equitable coloring.</title>
<date>2003</date>
<journal>Journal of Graph Theory</journal>
<volume>44</volume>
<pages>166--177</pages>
<contexts>
<context position="17162" citStr="[KPW03]" startWordPosition="3083" endWordPosition="3083">r classes, then the problem is W[1]-hard. To show the desired reduction, we introduce two more general problems. List analogues of equitable coloring have been previously studied by Kostochka, et al. [KPW03]. The LIST EQUITABLE COLORING PROBLEM (LECP): Given an input graph G = (V, E), lists Lv of colors for every vertex v ∈ V and a positive integer r; does there exist a proper coloring f of G with r colo</context>
</contexts>
<marker>[KPW03]</marker>
<rawString>A. V. Kostochka, M. J. Pelsmajer and D. B. West. A list analogue of equitable coloring. Journal of Graph Theory 44 (2003), 166–177.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Kratochvil</author>
<author>Z Tuza</author>
<author>M Voigt</author>
</authors>
<title>New trends in the theory of graph colorings: choosability and list coloring. In:</title>
<date>1999</date>
<booktitle>Contemporary Trends in Discrete Mathematics (from DIMACS and DIMATIA to the</booktitle>
<volume>49</volume>
<pages>183--197</pages>
<editor>future) (R. Graham, et al., eds.),</editor>
<location>Providence,</location>
<contexts>
<context position="3282" citStr="[KTV98]" startWordPosition="516" endWordPosition="516">ameterized complexity [DF99,Nie06], where we take the parameter to be the treewidth bound t. Our main results are summarized: – We show that the list chromatic number (also known as the choice number [KTV98]) of a graph can be computed in linear time for any fixed treewidth bound t. (We prove this using a new “trick” for extending the applicability of Monadic Second Order logic that is of general interes</context>
</contexts>
<marker>[KTV98]</marker>
<rawString>J. Kratochvil, Z. Tuza and M. Voigt. New trends in the theory of graph colorings: choosability and list coloring. In: Contemporary Trends in Discrete Mathematics (from DIMACS and DIMATIA to the future) (R. Graham, et al., eds.), DIMACS Series in Discrete Mathematics and Theoretical Computer Science, vol. 49 (AMS, Providence, 1999), 183– 197.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Marx</author>
</authors>
<title>Graph coloring with local and global constraints.</title>
<date>2004</date>
<tech>Ph.D. dissertation,</tech>
<institution>Department of Computer Science and Information Theory, Budapest University of Technology and Economics,</institution>
<contexts>
<context position="30763" citStr="[Ma04]" startWordPosition="5699" endWordPosition="5699"> optimization problems, such as the coloring problems considered here, have strong claims with respect to applications. A source of discussion of these applications is the recent dissertation of Marx [Ma04]. It seems interesting and fruitful to consider such problems from the parameterized point of view, and to investigate how such extra problem structure (which tends to increase both computational comp</context>
</contexts>
<marker>[Ma04]</marker>
<rawString>D. Marx. Graph coloring with local and global constraints. Ph.D. dissertation, Department of Computer Science and Information Theory, Budapest University of Technology and Economics, 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Meyer</author>
</authors>
<title>Equitable coloring.</title>
<date>1973</date>
<journal>American Mathematical Monthly</journal>
<volume>80</volume>
<pages>920--922</pages>
<contexts>
<context position="16502" citStr="[Mey73]" startWordPosition="2972" endWordPosition="2972"> COLORING is W[1]-Hard Parameterized by Treewidth The notion of equitable coloring seems to have been first introduced by Meyer in 1973, where an application to scheduling garbage trucks is described [Mey73]. Recently, Bodlaender and Fomin have shown that determining whether a graph of treewidth at most t admits an equitable coloring, can be solved in time O(nO(t)) [BF05]. We consider the parameterized c</context>
</contexts>
<marker>[Mey73]</marker>
<rawString>W. Meyer. Equitable coloring. American Mathematical Monthly 80 (1973), 920–922.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Niedermeier</author>
</authors>
<title>Invitation to Fixed Parameter Algorithms.</title>
<date>2006</date>
<publisher>Oxford University Press,</publisher>
<marker>[Nie06]</marker>
<rawString>R. Niedermeier. Invitation to Fixed Parameter Algorithms. Oxford University Press, 2006.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Thomassen</author>
</authors>
<title>Every planar graph is 5-choosable.</title>
<date>1994</date>
<journal>J. Combinatorial Theory Ser. B</journal>
<volume>62</volume>
<pages>180--181</pages>
<contexts>
<context position="7978" citStr="[Th94]" startWordPosition="1327" endWordPosition="1327">76], and independently by Erdös, Rubin and Taylor in 1980 [ERT80]. A celebrated result that gave impetus to the area was proved by Thomassen: every planar graph has list chromatic number at most five [Th94]. 3 We describe an algorithm for the LIST CHROMATIC NUMBER problem that runs in linear time for any fixed treewidth bound t. Our algorithm employs the machinery of Monadic Second Order (MSO) logic, du</context>
</contexts>
<marker>[Th94]</marker>
<rawString>C. Thomassen. Every planar graph is 5-choosable. J. Combinatorial Theory Ser. B 62 (1994), 180–181.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Tuza</author>
</authors>
<title>Graph colorings with local constraints — A survey.</title>
<date>1997</date>
<journal>Discussiones Mathematicae – Graph Theory</journal>
<volume>17</volume>
<pages>161--228</pages>
<contexts>
<context position="5131" citStr="[Tu97]" startWordPosition="860" endWordPosition="860">lete, and can also be solved in time O(nt+2) for graphs of treewidth at most t [JS97]. The LIST CHROMATIC NUMBER problem is 17p2 -complete for any fixed r &gt; 3, a result attributed to Gutner and Tarsi [Tu97]. There does not appear to have been any previous result on the complexity of the LIST CHROMATIC NUMBER problem for graphs of bounded treewidth. Some Background on Parameterized Complexity. Parameteri</context>
</contexts>
<marker>[Tu97]</marker>
<rawString>Z. Tuza. Graph colorings with local constraints — A survey. Discussiones Mathematicae – Graph Theory 17 (1997), 161–228.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V G Vizing</author>
</authors>
<title>Coloring the vertices of a graph in prescribed colors.</title>
<date>1976</date>
<journal>Metody Diskret. Anal. v Teorii Kodov i Schem</journal>
<volume>29</volume>
<pages>3--10</pages>
<publisher>(In Russian.)</publisher>
<contexts>
<context position="7775" citStr="[Viz76]" startWordPosition="1293" endWordPosition="1293">r the source problem. 1.1 LIST CHROMATIC NUMBER Parameterized by Treewidth is FPT The notion of the list chromatic number (also known as the choice number) of a graph was introduced by Vizing in 1976 [Viz76], and independently by Erdös, Rubin and Taylor in 1980 [ERT80]. A celebrated result that gave impetus to the area was proved by Thomassen: every planar graph has list chromatic number at most five [Th</context>
</contexts>
<marker>[Viz76]</marker>
<rawString>V. G. Vizing. Coloring the vertices of a graph in prescribed colors. Metody Diskret. Anal. v Teorii Kodov i Schem 29 (1976), 3–10. (In Russian.)</rawString>
</citation>
<citation valid="true">
<authors>
<author>D R Woodall</author>
</authors>
<title>List colourings of graphs, in:</title>
<date>2001</date>
<booktitle>Surveys in Combinatorics</booktitle>
<pages>269--301</pages>
<editor>(J. W. P. Hirschfeld, ed.) London Math.</editor>
<publisher>Univ. Press,</publisher>
<marker>[Wo01]</marker>
<rawString>D. R. Woodall. List colourings of graphs, in: Surveys in Combinatorics 2001 (J. W. P. Hirschfeld, ed.) London Math. Soc. Lecture Notes Series 288 (Cambridge Univ. Press, 2001), 269–301.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>