<Publication>
  <id>TUW-181199</id>
  <title>spock : A Debugging Support Tool for Logic Programs under the Answer-Set Semantics ⋆</title>
  <abstractText>Answer-set programming (ASP) is an emerging logic-programming paradigm that strictly separates the description of a problem from its solving methods. Despite its semantic elegance, ASP suffers from a lack of support for program developers. In particular, tools are needed that help engineers in detecting erroneous parts of their programs. Unlike in other areas of logic programming, applying tracing techniques for debugging logic programs under the answer-set semantics seems rather unnatural, since employing imperative solving algorithms would undermine the declarative flavour of ASP. In this paper, we present the system spock , a debugging support tool for answer-set programs making use of ASP itself. The implemented techniques maintain the declarative nature of ASP within the debugging process and are independent of the actual computation of answer sets.</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>1 General Information</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2 Background</title>
      <type>deo:Background</type>
      <typeEnum>BACKGROUND</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3 System</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>10</string>
        <string>11</string>
        <string>12</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4 Discussion and Related Work</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>5</string>
        <string>13</string>
        <string>14</string>
        <string>3</string>
        <string>2</string>
        <string>4</string>
        <string>15</string>
        <string>16</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref60</id>
      <referenceIdString>60</referenceIdString>
      <authors/>
      <referenceText>1. Baral, C.: Knowledge Representation, Reasoning and Declarative Problem Solving. Cam- bridge University Press (2003)</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref61</id>
      <referenceIdString>61</referenceIdString>
      <authors/>
      <referenceText>2. Brain, M., De Vos, M.: Debugging Logic Programs under the Answer Set Semantics. In: Proc. ASP’05. Volume 142, CEUR Workshop Proceedings (CEUR-WS.org) (2005) 141–152</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref62</id>
      <referenceIdString>62</referenceIdString>
      <authors/>
      <referenceText>3. Syrjänen, T.: Debugging Inconsistent Answer Set Programs. In: Proc. NMR’06. (2006) 77–83</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref63</id>
      <referenceIdString>63</referenceIdString>
      <authors/>
      <referenceText>4. Pontelli, E., Son, T.: Justifications for Logic Programs under Answer Set Semantics. In: Proc. ICLP’06. Springer (2006) 196–210</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref64</id>
      <referenceIdString>64</referenceIdString>
      <authors/>
      <referenceText>5. Brain, M., Gebser, M., Pührer, J., Schaub, T., Tompits, H., Woltran, S.: Debugging ASP Programs by means of ASP. In: Proc. LPNMR’07. Springer (2007) 31–43</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref65</id>
      <referenceIdString>65</referenceIdString>
      <authors/>
      <referenceText>6. Brain, M., Gebser, M., Pührer, J., Schaub, T., Tompits, H., Woltran, S.: “That is Illogical Captain!” – The Debugging Support Tool spock for Answer-Set Programs: System Descrip- tion. In: Proc. SEA’07. (2007) 71–85</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref66</id>
      <referenceIdString>66</referenceIdString>
      <authors/>
      <referenceText>7. Delgrande, J., Schaub, T., Tompits, H.: A Framework for Compiling Preferences in Logic Programs. Theory and Practice of Logic Programming 3 (2003) 129–187</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref67</id>
      <referenceIdString>67</referenceIdString>
      <authors/>
      <referenceText>8. Lin, F., Zhao, Y.: ASSAT: Computing Answer Sets of a Logic Program by SAT Solvers. Artificial Intelligence 157 (2004) 115–137</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref68</id>
      <referenceIdString>68</referenceIdString>
      <authors/>
      <referenceText>9. Clark, K.: Negation as Failure. In: Logic and Data Bases. Plenum Press (1978) 293–322</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref70</id>
      <referenceIdString>70</referenceIdString>
      <authors/>
      <referenceText></referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref71</id>
      <referenceIdString>71</referenceIdString>
      <authors/>
      <referenceText>11. Leone, N., Pfeifer, G., Faber, W., Eiter, T., Gottlob, G., Perri, S., Scarcello, F.: The DLV System for Knowledge Representation and Reasoning. ACM Transactions on Computational Logic 7 (2006) 499–562</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref72</id>
      <referenceIdString>72</referenceIdString>
      <authors/>
      <referenceText>12. Simons, P., Niemelä, I., Soininen, T.: Extending and Implementing the Stable Model Semantics. Artificial Intelligence 138 (2002) 181–234</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref73</id>
      <referenceIdString>73</referenceIdString>
      <authors/>
      <referenceText>13. Pührer, J.: On Debugging of Propositional Answer-Set Programs. Master’s thesis, Vienna University of Technology, Austria (2007)</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref74</id>
      <referenceIdString>74</referenceIdString>
      <authors/>
      <referenceText>14. Gebser, M., Pührer, J., Schaub, T., Tompits, H.: A Meta-Programming Technique for Debugging Answer-Set Programs. In: Proc. AAAI’08. (2008) To appear</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref75</id>
      <referenceIdString>75</referenceIdString>
      <authors/>
      <referenceText>15. Roychoudhury, A., Ramakrishnan, C., Ramakrishnan, I.: Justifying Proofs using Memo Tables. In: Proc. PPDP’00. (2000) 178–189</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref76</id>
      <referenceIdString>76</referenceIdString>
      <authors/>
      <referenceText>16. Specht, G.: Generating Explanation Trees even for Negations in Deductive Database Systems. In: Proc. LPE’93. (1993) 8–13</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>