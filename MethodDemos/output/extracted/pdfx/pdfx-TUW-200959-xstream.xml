<Publication>
  <id>TUW-200959</id>
  <title>D IGRAPH D M ONOTONICITY</title>
  <abstractText>We consider monotonicity problems for graph searching games. Variants of these games – defined by the type of moves allowed for the players – have been found to be closely connected to graph decompositions and associated width measures such as path- or tree-width. Of particular interest is the question whether these games are monotone, i.e. whether the cops can catch a robber without ever allowing the robber to reach positions that have been cleared before. The monotonicity problem for graph searching games has intensely been studied in the literature, but for two types of games the problem was left unresolved. These are the games on digraphs where the robber is invisible and lazy or visible and fast. In this paper, we solve the problems by giving examples showing that both types of games are non-monotone. Graph searching games on digraphs are closely related to recent proposals for digraph decompositions generalising tree-width to directed graphs. These proposals have partly been motivated by attempts to develop a structure theory for digraphs similar to the graph minor theory developed by Robertson and Seymour for undirected graphs, and partly by the immense number of algorithmic results using tree-width of undirected graphs and the hope that part of this success might be reproducible on digraphs using a “directed tree-width”. For problems such as disjoint paths and Hamiltonicity, it has indeed been shown that they are tractable on graphs of small directed tree-width. However, the number of such examples is still small. We therefore explore the limits of the algorithmic applicability of digraph decompositions. In particular, we show that various natural candidates for problems that might benefit from digraphs having small “directed tree-width” remain NP-complete even on almost acyclic graphs.</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>1 Introduction</title>
      <type>deo:Introduction</type>
      <typeEnum>INTRODUCTION</typeEnum>
      <referenceIds>
        <string>9</string>
        <string>8</string>
        <string>12</string>
        <string>10</string>
        <string>20</string>
        <string>20</string>
        <string>7</string>
        <string>10</string>
        <string>4</string>
        <string>13</string>
        <string>14</string>
        <string>21</string>
        <string>27</string>
        <string>2</string>
        <string>24</string>
        <string>17</string>
        <string>4</string>
        <string>6</string>
        <string>25</string>
        <string>16</string>
        <string>24</string>
        <string>17</string>
        <string>23</string>
        <string>5</string>
        <string>16</string>
        <string>15</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2 Preliminaries</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>11</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3 Cops and robber games</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>12</string>
        <string>10</string>
        <string>7</string>
        <string>18</string>
        <string>1</string>
        <string>17</string>
        <string>17</string>
        <string>4</string>
        <string>5</string>
        <string>16</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4 Limits of Algorithmic Applications</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>17</string>
        <string>5</string>
        <string>16</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>5 Conclusion and Open Problems</title>
      <type>deo:Conclusion</type>
      <typeEnum>CONCLUSIONS</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref141</id>
      <referenceIdString>141</referenceIdString>
      <authors/>
      <referenceText>[1] I. Adler. Directed tree-width examples. J. Combin. Theory Ser. B , 97(5):718–725, 2007.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref142</id>
      <referenceIdString>142</referenceIdString>
      <authors/>
      <referenceText>[2] B. Alspach. Searching and sweeping graphs: A brief survey. In COMBINATORICS 04 , 2004.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref143</id>
      <referenceIdString>143</referenceIdString>
      <authors/>
      <referenceText>[3] J. Bang-Jensen and G. Gutin. Digraphs - Theory, Algorithms and Applications . Springer, 2001.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref144</id>
      <referenceIdString>144</referenceIdString>
      <authors/>
      <referenceText>[4] J. Barát. Directed path-width and monotonicity in digraph searching. Graphs Combin. , 22(2):161–172, 2006.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref145</id>
      <referenceIdString>145</referenceIdString>
      <authors/>
      <referenceText>[5] D. Berwanger, A. Dawar, P. Hunter, and S. Kreutzer. DAG-width and parity games. In STACS 2006 , volume 3884 of Lecture Notes in Comput. Sci. , pages 524–536. Springer, Berlin, 2006.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref146</id>
      <referenceIdString>146</referenceIdString>
      <authors/>
      <referenceText>[6] D. Berwanger and E. Grädel. Entanglement – A measure for the complexity of directed graphs with applications to logic and games. In LPAR , pages 209–223, 2004.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref147</id>
      <referenceIdString>147</referenceIdString>
      <authors/>
      <referenceText>[7] D. Bienstock and P. Seymour. Monotonicity in graph searching. Journal of Algorithms , 12:239 – 245, 1991.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref148</id>
      <referenceIdString>148</referenceIdString>
      <authors/>
      <referenceText>[8] H. L. Bodlaender. Treewidth: Algorithmic techniques and results. In MFCS’97 , volume 1295, pages 19–36, 1997.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref150</id>
      <referenceIdString>150</referenceIdString>
      <authors/>
      <referenceText>[9] H. L. Bodlaender. A partial k -arboretum of graphs with bounded treewidth. Theoretical Computer Science , 209:1–45, 1998.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref151</id>
      <referenceIdString>151</referenceIdString>
      <authors/>
      <referenceText>[10] N. D. Dendris, L. M. Kirousis, and D. M. Thilikos. Fugitive-search games on graphs and related parameters. TCS , 172(1-2):233–254, 1997.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref152</id>
      <referenceIdString>152</referenceIdString>
      <authors/>
      <referenceText>[11] R. Diestel. Graph theory , volume 173 of Graduate Texts in Mathematics . Springer-Verlag, Berlin, third edition, 2005.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref153</id>
      <referenceIdString>153</referenceIdString>
      <authors/>
      <referenceText>[12] P. D.Seymour and R. Thomas. Graph searching, and a min-max theorem for tree-width. Journal of Combinatorial Theory, Series B , 58:22–33, 1993.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref154</id>
      <referenceIdString>154</referenceIdString>
      <authors/>
      <referenceText>[13] D. Dyer. Sweeping Graphs and Digraphs . PhD thesis, Simon Fraser University, 2004.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref155</id>
      <referenceIdString>155</referenceIdString>
      <authors/>
      <referenceText>[14] F. V. Fomin and D. M. Thilikos. On the monotonicity of games generated by symmetric sub- modular functions. Lecture Notes in Computer Science , 2204:177+, 2001.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref156</id>
      <referenceIdString>156</referenceIdString>
      <authors/>
      <referenceText>[15] M. R. Garey and D. S. Johnson. Computers and Intractibility . W. H. Freeman and Company, 1979.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref157</id>
      <referenceIdString>157</referenceIdString>
      <authors/>
      <referenceText>[16] P. Hunter and S. Kreutzer. Digraph measures: Kelly decompositions, games, and orderings. In Proc. of the 18th ACM-SIAM Symp. on Discrete Algorithms (SODA) , pages 637 – 644, 2007.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref158</id>
      <referenceIdString>158</referenceIdString>
      <authors/>
      <referenceText>[17] T. Johnson, N. Robertson, P. D. Seymour, and R. Thomas. Directed tree-width. J. Combin. Theory Ser. B , 82(1):138–154, 2001.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref159</id>
      <referenceIdString>159</referenceIdString>
      <authors/>
      <referenceText>[18] T. Johnson, N. Robertson, P. D. Seymour, and R. Thomas. Directed tree-width. Journal of Combinatorial Theory, Series B , 82(1):138–154, 2001.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref160</id>
      <referenceIdString>160</referenceIdString>
      <authors/>
      <referenceText>[19] Rm M. Karp. Complexity of Computer Science . Plenum Press New York, 1972.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref161</id>
      <referenceIdString>161</referenceIdString>
      <authors/>
      <referenceText>[20] A. S. LaPaugh. Recontamination does not help to search a graph. Journal of the ACM , 40:224 – 254, 1993.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref162</id>
      <referenceIdString>162</referenceIdString>
      <authors/>
      <referenceText>[21] F. Mazoit and N. Nisse. Monotonicity property of non-deterministic graph searching. In In Proceedings of the 33rd International Workshop on Graph-Theoretic Concepts in Computer Science (WG 2007) , 2007. to appear.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref163</id>
      <referenceIdString>163</referenceIdString>
      <authors/>
      <referenceText>[22] D. M. Moyles and G. L. Thompson. An algorithm for finding a minimum equivalent graph of a digraph. J. ACM , 16(3):455–460, 1969.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref164</id>
      <referenceIdString>164</referenceIdString>
      <authors/>
      <referenceText>[23] J. Obdr zálek. DAG-width: connectivity measure for directed graphs. In Proceedings of the 17th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA) , pages 814–821, 2006.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref165</id>
      <referenceIdString>165</referenceIdString>
      <authors/>
      <referenceText>[24] B. Reed. Introducing directed tree width. In 6th Twente Workshop on Graphs and Combinatorial Optimization (Enschede, 1999) , volume 3 of Electron. Notes Discrete Math. , page 8 pp. (electronic). Elsevier, Amsterdam, 1999.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref166</id>
      <referenceIdString>166</referenceIdString>
      <authors/>
      <referenceText>[25] M. A. Safari. d-width: a more natural measure for directed tree width. In Mathematical founda- tions of computer science 2005 , volume 3618 of Lecture Notes in Comput. Sci. , pages 745–756. Springer, Berlin, 2005.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref167</id>
      <referenceIdString>167</referenceIdString>
      <authors/>
      <referenceText>[26] J. van Leeuwen. Having a grundy-numbering is np-complete. Technical report, Pennsylvania State University, 1976.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref169</id>
      <referenceIdString>169</referenceIdString>
      <authors/>
      <referenceText>[27] B. Yang and Y. Cao. Digraph strong searching: Monotonicity and complexity. In AAIM , pages 37–46, 2007.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>