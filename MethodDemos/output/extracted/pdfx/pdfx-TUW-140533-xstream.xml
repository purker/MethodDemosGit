<Publication>
  <id>TUW-140533</id>
  <title>Formal Program Verification: a Comparison of Selected Tools and Their Theoretical Foundations</title>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>Zusammenfassung</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Acknowledgements</title>
      <type>deo:Acknowledgements</type>
      <typeEnum>ACKNOWLEDGEMENTS</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Contents</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>1 Introduction</title>
      <type>deo:Introduction</type>
      <typeEnum>INTRODUCTION</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2 Theoretical Foundations</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3 Selected Tools</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4 Examples</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>5 Summary</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>Hoare, 2003</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Resources</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref475</id>
      <referenceIdString>475</referenceIdString>
      <authors/>
      <referenceText>Wolfgang Ahrendt, Thomas Baar, Bernhard Beckert, Richard Bubel, Martin Giese, Reiner Hähnle, Wolfram Menzel, Wojciech Mostowski, Andreas Roth, Steffen Schlager, and Peter Schmitt. The KeY tool. Software and System Modeling , 2004. Online First issue, to appear in print.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref476</id>
      <referenceIdString>476</referenceIdString>
      <authors/>
      <referenceText>Krzysztof Apt and Ernst-Rüdiger Olderog. Programmverifikation . Springer- Verlag, 1994. ISBN 3-540-57479-4.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref477</id>
      <referenceIdString>477</referenceIdString>
      <authors/>
      <referenceText>Franz Baader and Tobias Nipkow. Term Rewriting and All That . Cambridge University Press, 1998.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref478</id>
      <referenceIdString>478</referenceIdString>
      <authors/>
      <referenceText>Andrej Bauer, Edmund Clarke, and Xudong Zhao. Analytica — An Experi- ment in Combining Theorem Proving and Symbolic Computation. Journal of Automated Reasoning , 21:295–325, 1998.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref479</id>
      <referenceIdString>479</referenceIdString>
      <authors/>
      <referenceText>Bernhard Beckert, Martin Giese, Elmar Habermalz, Reiner Hähnle, Andreas Roth, Philipp Rümmer, and Steffen Schlager. Taclets: A new paradigm for constructing interactive theorem provers. Revista de la Real Academia de Ciencias Exactas, Fısicas y Naturales, Serie A: Matemáticas (RACSAM) , 98(1), 2004. Special Issue on Symbolic Computation in Logic and Artificial Intelligence.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref481</id>
      <referenceIdString>481</referenceIdString>
      <authors/>
      <referenceText>. mcs.anl.gov/AAR/issuesept04/index.html#paradox .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref482</id>
      <referenceIdString>482</referenceIdString>
      <authors/>
      <referenceText>Edmund Clarke and Xudong Zhao. Analytica — A Theorem Prover for Mathematica. The Mathematica Journal , 3:56–71, 1993.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref483</id>
      <referenceIdString>483</referenceIdString>
      <authors/>
      <referenceText>David Crocker. The Perfect Developer Language Reference Manual , September 2001.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref484</id>
      <referenceIdString>484</referenceIdString>
      <authors/>
      <referenceText>David Crocker. Developing Reliable Software using Object-Oriented Formal Specification and Refinement. Escher Technologies Ltd., 2003a.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref485</id>
      <referenceIdString>485</referenceIdString>
      <authors/>
      <referenceText>David Crocker. Perfect Developer: A tool for Object-Oriented Formal Specification and Refinement. Tools Exhibition Notes at Formal Methods Europe , 2003b.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref487</id>
      <referenceIdString>487</referenceIdString>
      <authors/>
      <referenceText>David Crocker. Automated Reasoning in Perfect Developer. Escher Technologies Ltd., 2004a.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref488</id>
      <referenceIdString>488</referenceIdString>
      <authors/>
      <referenceText>David Crocker. Safe Object-Oriented Software: The Verified Design-By- Contract Paradigm. In Redmill and Anderson, editors, Proceedings of the Twelfth Safety-Critical Systems Symposium , pages 19–41, London, 2004b. Springer-Verlag. ISBN 1-85233-800-8.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref489</id>
      <referenceIdString>489</referenceIdString>
      <authors/>
      <referenceText>Edsger Dijkstra and Carel Scholten. Predicate Calculus and Program Semantics . Springer-Verlag, 1990.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref490</id>
      <referenceIdString>490</referenceIdString>
      <authors/>
      <referenceText>Melvin Fitting. First-order logic and automated theorem proving . Springer- Verlag, 1990. ISBN 0-387-97233-1.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref492</id>
      <referenceIdString>492</referenceIdString>
      <authors/>
      <referenceText>. uni-jena.de/Fpp/fpp-intr.htm#references .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref494</id>
      <referenceIdString>494</referenceIdString>
      <authors/>
      <referenceText> ∼ jean/ gbooks/logic.html .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref495</id>
      <referenceIdString>495</referenceIdString>
      <authors/>
      <referenceText>John Gannon, James Purtilo, and Marvin Zelkowitz. Software Specification: A Comparison of Formal Methods . International Specialized Book Service Inc., September 1993.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref496</id>
      <referenceIdString>496</referenceIdString>
      <authors/>
      <referenceText>Gerhard Gentzen. Untersuchungen über das logische Schließen. Mathema- tische Zeitschrift , 39, 1935.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref497</id>
      <referenceIdString>497</referenceIdString>
      <authors/>
      <referenceText>David Gries. The Science of Programming . Springer-Verlag, 1989.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref498</id>
      <referenceIdString>498</referenceIdString>
      <authors/>
      <referenceText>David Griffioen and Marieke Huisman. A comparison of PVS and Isabelle/HOL. In Jim Grundy and Malcolm Newey, editors, Theorem Proving in Higher Order Logics: 11th International Conference, TPHOLs ’98 , volume 1479 of Lecture Notes in Computer Science , pages 123–142, Can- berra, Australia, September 1998. Springer-Verlag.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref500</id>
      <referenceIdString>500</referenceIdString>
      <authors/>
      <referenceText></referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref501</id>
      <referenceIdString>501</referenceIdString>
      <authors/>
      <referenceText>Tony Hoare. The verifying compiler: A grand challenge for computing research. J. ACM , 50(1):63–69, 2003. ISSN 0004-5411. doi: http: //doi.acm.org/10.1145/602382.602403.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref503</id>
      <referenceIdString>503</referenceIdString>
      <authors/>
      <referenceText>Michael Huth and Mark Ryan. Logic in Computer Science: Modelling and Reasoning about Systems . Cambridge University Press, 2nd edition, 2004. ISBN 0 521 54310X.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref504</id>
      <referenceIdString>504</referenceIdString>
      <authors/>
      <referenceText>Cliff Jones. The Early Search for Tractable Ways of Reasoning about Programs. IEEE Annals of the History of Computing , 25:26–49, 2003. ISSN 1058-6180.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref505</id>
      <referenceIdString>505</referenceIdString>
      <authors/>
      <referenceText>Bertrand Meyer. The grand challenge of Trusted Components. In ICSE ’03: Proceedings of the 25th International Conference on Software Engineering , pages 660–667. IEEE Computer Society, 2003. ISBN 0-7695-1877-X.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref507</id>
      <referenceIdString>507</referenceIdString>
      <authors/>
      <referenceText>. omg.org/docs/ptc/03-10-14.pdf .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref509</id>
      <referenceIdString>509</referenceIdString>
      <authors/>
      <referenceText>#UML2.0 .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref511</id>
      <referenceIdString>511</referenceIdString>
      <authors/>
      <referenceText> .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref512</id>
      <referenceIdString>512</referenceIdString>
      <authors/>
      <referenceText>Sam Owre, John Rushby, Natarajan Shankar, and David Stringer-Calvert. PVS: an experience report. In Dieter Hutter, Werner Stephan, Paolo Traverso, and Markus Ullman, editors, Applied Formal Methods—FM- Trends 98 , volume 1641 of Lecture Notes in Computer Science , pages 338–345, Boppard, Germany, October 1998. Springer-Verlag. URL http: //www.csl.sri.com/papers/fmtrends98/ .</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref513</id>
      <referenceIdString>513</referenceIdString>
      <authors/>
      <referenceText>Sam Owre, John Rushby, Natarajan Shankar, and David Stringer-Calvert. PVS Language Reference , November 2001a.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref514</id>
      <referenceIdString>514</referenceIdString>
      <authors/>
      <referenceText>Sam Owre, John Rushby, Natarajan Shankar, and David Stringer-Calvert. PVS Prover Guide , November 2001b.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref515</id>
      <referenceIdString>515</referenceIdString>
      <authors/>
      <referenceText>Sam Owre, John Rushby, Natarajan Shankar, and David Stringer-Calvert. PVS System Guide , November 2001c.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref516</id>
      <referenceIdString>516</referenceIdString>
      <authors/>
      <referenceText>Sam Owre and Natarajan Shankar. The Formal Semantics of PVS , March 1999.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref517</id>
      <referenceIdString>517</referenceIdString>
      <authors/>
      <referenceText>Gernot Salzer. Theoretische Informatik 1. Institute of Computer Languages, Vienna University of Technology, June 2002.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref519</id>
      <referenceIdString>519</referenceIdString>
      <authors/>
      <referenceText>Sun Microsystems. Java Card 2.2.1 Platform Specification , October 2003.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref520</id>
      <referenceIdString>520</referenceIdString>
      <authors/>
      <referenceText>Dirk van Dalen. Logic and Structure . Springer-Verlag, 4th extended edition, 2004. ISBN 3-540-20879-8.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref521</id>
      <referenceIdString>521</referenceIdString>
      <authors/>
      <referenceText>Jürgen Winkler. wp is Basically a State Set Transformer. Institute of Computer Science, Friedrich-Schiller-University, 1995.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref522</id>
      <referenceIdString>522</referenceIdString>
      <authors/>
      <referenceText>Jürgen Winkler. The Frege Program Prover. 42. Internationales Wis- senschaftliches Kolloquium, Technische Universität Ilmenau , pages 116– 121, 1997. ISSN 0943-7207.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref523</id>
      <referenceIdString>523</referenceIdString>
      <authors/>
      <referenceText>Michael Zolda. Isabelle/HOL versus ACL2: Comparing Two Inductive Proof Systems. Institute of Computer Languages, Vienna University of Technology, 2004.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>