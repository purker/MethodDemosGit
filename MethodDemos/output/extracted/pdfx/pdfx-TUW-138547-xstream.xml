<Publication>
  <id>TUW-138547</id>
  <title>Gigabit Ethernet-based Parallel Video Processing</title>
  <abstractText>This paper describes solutions for parallel video processing based on LAN-connected PC-like workstations. We outline application scenarios for the processing of video with broadcast TV resolution and promising areas for future research. Additionally, we describe a prototype system implemented in our workgroup. This Network-of-Workstations is based on Gigabit Ethernet, free Java software and standard network protocols. Video data is streamed to and from processing hosts using IP multicast and the Real-time Transfer Protocol. Control mechanisms are based on network file sharing. In comparison to related approaches, our system makes use of high- performance network hardware and open source software. In consequence, our system is easier to implement, cheaper and more flexible than, for example, highly integrated commercial solutions.</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>1. Introduction</title>
      <type>deo:Introduction</type>
      <typeEnum>INTRODUCTION</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2. Related work</title>
      <type>deo:RelatedWork</type>
      <typeEnum>RELATEDWORK</typeEnum>
      <referenceIds>
        <string>2</string>
        <string>1</string>
        <string>7</string>
        <string>4</string>
        <string>5</string>
        <string>6</string>
        <string>6</string>
        <string>5</string>
        <string>4</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3. Applications and problems of Parallel Video Processing</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4. Prototype design</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>5. Implementation</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>6. Conclusions and future work</title>
      <type>deo:Conclusion</type>
      <typeEnum>CONCLUSIONS</typeEnum>
      <referenceIds>
        <string>6</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>7. Acknowledgements</title>
      <type>deo:Acknowledgements</type>
      <typeEnum>ACKNOWLEDGEMENTS</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref68</id>
      <referenceIdString>68</referenceIdString>
      <authors/>
      <referenceText>[1] D.T. Altilar, and Y. Paker, &quot;Minimum Overhead Data Partitioning Algorithms for Parallel Video Processing,&quot; Proceedings Domain Decomposition Methods Conference , Chiba Japan, Oct. 2001, pp. 251- 258.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref69</id>
      <referenceIdString>69</referenceIdString>
      <authors/>
      <referenceText>[2] A. Guha, A., Pavan, J., Liu, A., Rastogi, and T. Steeves, &quot;Supporting Real-Time and Multimedia Applications on the Mercuri Testbed,&quot; IEEE Journal on Selected Areas in Communications , vol. 13, no. 4, IEEE Press, May 1995, pp. 749-763.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref71</id>
      <referenceIdString>71</referenceIdString>
      <authors/>
      <referenceText> products/java-media/jmf/ (last visited: 2004-09-10).</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref72</id>
      <referenceIdString>72</referenceIdString>
      <authors/>
      <referenceText>[4] K. Mayer-Patel, and L.A. Rowe, &quot;A Multicast Control Scheme for Parallel Software-only Video Effects Processing,&quot; Proceedings ACM Multimedia Conference , ACM Press, Orlando FL, Nov. 1999, pp. 409-418.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref73</id>
      <referenceIdString>73</referenceIdString>
      <authors/>
      <referenceText>[5] K. Mayer-Patel, and L.A. Rowe, &quot;Exploiting Spatial Parallelism for Software-only Video Effects Processing,&quot; Proceedings SPIE Multimedia Computing and Networking Conference , SPIE Press, San Jose CA, Jan. 1998, pp. 28-39.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref74</id>
      <referenceIdString>74</referenceIdString>
      <authors/>
      <referenceText>[6] K. Mayer-Patel, and L.A. Rowe, &quot;Exploiting Temporal Parallelism for Software-only Video Effects Processing,&quot; Proceedings ACM Multimedia Conference , ACM Press, Bristol UK, Sep. 1998, pp. 161-169.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref75</id>
      <referenceIdString>75</referenceIdString>
      <authors/>
      <referenceText>[7] M.T. Yang, R. Kasturi, and A.A. Sivasubramaniam, &quot;Pipeline-Based Approach for Scheduling Video Processing Algorithms on NOW,&quot; IEEE Transactions on Parallel and Distributed Systems , IEEE Press, vol. 14, no. 2, Feb. 2003, pp. 119-130.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>