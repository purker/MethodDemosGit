<Publication>
  <id>TUW-140867</id>
  <title>Automated Tools for Teaching Formal Software Verification</title>
  <abstractText>We present the status of formal methods at our university, and describe our course on formal software verification in more detail. We report our experiences in using Perfect Developer for the course assignments.</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>1. INTRODUCTION</title>
      <type>deo:Introduction</type>
      <typeEnum>INTRODUCTION</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2. FORMAL VERIFICATION OF SOFTWARE</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>4</string>
        <string>6</string>
        <string>5</string>
        <string>9</string>
        <string>1</string>
        <string>3</string>
        <string>6</string>
        <string>8</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3. OBSERVATIONS</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4. CONCLUSION</title>
      <type>deo:Conclusion</type>
      <typeEnum>CONCLUSIONS</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>APPENDIX: PROBLEMS TO BE VERIFIED WITH PERFECT DEVELOPER</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref64</id>
      <referenceIdString>64</referenceIdString>
      <authors/>
      <referenceText>[1] Wolfgang Ahrendt, Thomas Baar, Bernhard Beckert, Richard Bubel, Martin Giese, Reiner H ahnle,  ̈ Wolfram Menzel, Wojciech Mostowski, Andreas Roth, Steffen Schlager, and Peter H. Schmitt. The KeY tool. Software and System Modeling , 4(1):32–54, 2005.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref65</id>
      <referenceIdString>65</referenceIdString>
      <authors/>
      <referenceText>[2] Edmund M. Clarke, Orna Grumberg, and Doron A. Peled. Model Checking . MIT Press, 2000.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref66</id>
      <referenceIdString>66</referenceIdString>
      <authors/>
      <referenceText>[3] David Crocker. Perfect Developer: A tool for Object-Oriented Formal Specification and Refinement. Tools Exhibition Notes at Formal Methods Europe , 2003.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref67</id>
      <referenceIdString>67</referenceIdString>
      <authors/>
      <referenceText>[4] Edsger Dijkstra. A Discipline of Programming . Prentice Hall, 1976.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref68</id>
      <referenceIdString>68</referenceIdString>
      <authors/>
      <referenceText>[5] Ingo Feinerer. Formal program verification: A comparison of selected tools and their theoretical foundations. Master’s thesis, Technische Universit at  ̈ Wien, Vienna, Austria, January 2005.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref69</id>
      <referenceIdString>69</referenceIdString>
      <authors/>
      <referenceText>[6] David Gries. The Science of Programming . Springer, 1987.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref70</id>
      <referenceIdString>70</referenceIdString>
      <authors/>
      <referenceText>[7] Michael R.A. Huth and Mark D. Ryan. Logic in Computer Science – modelling and reasoning about systems . Cambridge University Press, 2003.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref71</id>
      <referenceIdString>71</referenceIdString>
      <authors/>
      <referenceText>[8] Sam Owre, John Rushby, and Natarajan Shankar. PVS: A prototype verification system. In Deepak Kapur, editor, 11th International Conference on Automated Deduction (CADE) , volume 607 of Lecture Notes in Artificial Intelligence , pages 748–752, Saratoga, NY, June 1992. Springer-Verlag.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref72</id>
      <referenceIdString>72</referenceIdString>
      <authors/>
      <referenceText>[9] J urgen  ̈ Winkler. The Frege Program Prover. 42. Internationales Wissenschaftliches Kolloquium, Technische Universit at  ̈ Ilmenau , pages 116–121, 1997.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>