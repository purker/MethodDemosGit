<Publication>
  <id>TUW-177140</id>
  <title>Testing Relativised Uniform Equivalence under Answer-Set Projection in the System cc ⊤ ⋆</title>
  <abstractText>The system cc ⊤ is a tool for testing correspondence between propositional logic programs under the answer-set semantics with respect to different refined notions of program correspondence. The underlying methodology of cc ⊤ is to reduce a given correspondence problem to the satisfiability problem of quantified propositional logic and to employ extant solvers for the latter language as back-end inference engines. In a previous version of cc ⊤ , the system was designed to test correspondence between programs based on relativised strong equivalence under answer-set projection . Such a setting generalises the standard notion of strong equivalence by taking the alphabet of the context programs as well as the projection of the compared answer sets to a set of designated output atoms into account. This paper outlines a newly added component of cc ⊤ for testing similarly parameterised correspondence problems based on uniform equivalence .</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <title>1 Motivation and General Information</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>2 Background</title>
      <type>deo:Background</type>
      <typeEnum>BACKGROUND</typeEnum>
      <referenceIds>
        <string>2</string>
        <string>7</string>
        <string>8</string>
        <string>9</string>
        <string>4</string>
        <string>4</string>
        <string>6</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>3 System Specifics</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds>
        <string>10</string>
        <string>6</string>
        <string>11</string>
        <string>12</string>
        <string>11</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
    <Section>
      <title>4 cc on Stage</title>
      <type>DoCO:Section</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>5 Conclusion</title>
      <type>deo:Conclusion</type>
      <typeEnum>CONCLUSIONS</typeEnum>
      <referenceIds>
        <string>14</string>
        <string>15</string>
      </referenceIds>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref59</id>
      <referenceIdString>59</referenceIdString>
      <authors/>
      <referenceText>1. Oetsch, J., Seidl, M., Tompits, H., Woltran, S.: ccT: A Tool for Checking Advanced Corre- spondence Problems in Answer-Set Programming. In Proceedings of the 15th International Conference on Computing (CIC 2006), IEEE Computer Society Press (2006) 3–10</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref60</id>
      <referenceIdString>60</referenceIdString>
      <authors/>
      <referenceText>2. Gelfond, M., Lifschitz, V.: Classical Negation in Logic Programs and Disjunctive Databases. New Generation Computing 9 (1991) 365–385</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref61</id>
      <referenceIdString>61</referenceIdString>
      <authors/>
      <referenceText>3. Lifschitz, V., Pearce, D., Valverde, A.: Strongly Equivalent Logic Programs. ACM TOCL 2 (4) (2001) 526–541</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref62</id>
      <referenceIdString>62</referenceIdString>
      <authors/>
      <referenceText>4. Eiter, T., Tompits, H., Woltran, S.: On Solution Correspondences in Answer Set Programming. In Proceedings of the 19th International Joint Conference on Artificial Intelligence (IJCAI 2005). (2005) 97–102</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref63</id>
      <referenceIdString>63</referenceIdString>
      <authors/>
      <referenceText>5. Eiter, T., Fink, M.: Uniform Equivalence of Logic Programs under the Stable Model Semantics. In Proceedings of the 19th International Conference on Logic Programming (ICLP 2003). Volume 2916 of LNCS, Springer (2003) 224–238</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref64</id>
      <referenceIdString>64</referenceIdString>
      <authors/>
      <referenceText>6. Oetsch, J., Tompits, H., Woltran, S.: Facts do not Cease to Exist Because They are Ignored: Relativised Uniform Equivalence with Answer-Set Projection. In Proceedings of the 22nd National Conference on Artificial Intelligence (AAAI 2007), AAAI Press (2007) 458–464</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref65</id>
      <referenceIdString>65</referenceIdString>
      <authors/>
      <referenceText>7. Eiter, T., Fink, M., Tompits, H., Woltran, S.: Simplifying Logic Programs Under Uniform and Strong Equivalence. In Proceedings of the 7th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR-7). Volume 2923 of LNCS, Springer (2004) 87–99</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref66</id>
      <referenceIdString>66</referenceIdString>
      <authors/>
      <referenceText>8. Pearce, D.: Simplifying Logic Programs under Answer Set Semantics. In Proceedings of the 20th International Conference on Logic Programming (ICLP 2004). Volume 3132 of LNCS, Springer (2004) 210–224</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref67</id>
      <referenceIdString>67</referenceIdString>
      <authors/>
      <referenceText>9. Lin, F., Chen, Y.: Discovering Classes of Strongly Equivalent Logic Programs. In Proceedings of the 19th International Joint Conference on Artificial Intelligence (IJCAI 2005). (2005) 516–521</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref68</id>
      <referenceIdString>68</referenceIdString>
      <authors/>
      <referenceText>10. Le Berre, D., Narizzano, M., Simon, L., Tacchella, L.A.: The Second QBF Solvers Compar- ative Evaluation. In Proceedings of the 7th International Conference on Theory and Applica- tions of Satisfiability Testing (SAT 2004). Volume 3542 of LNCS, Springer (2005) 376–392</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref69</id>
      <referenceIdString>69</referenceIdString>
      <authors/>
      <referenceText>11. Oetsch, J., Seidl, M., Tompits, H., Woltran, S.: An Extension of the System cc ⊤ for Testing Relativised Uniform Equivalence under Answer-Set Projection (2007) Submitted draft.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref70</id>
      <referenceIdString>70</referenceIdString>
      <authors/>
      <referenceText>12. Zolda, M.: Comparing Different Prenexing Strategies for Quantified Boolean Formulas (2004) Master’s Thesis, Vienna University of Technology.</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref71</id>
      <referenceIdString>71</referenceIdString>
      <authors/>
      <referenceText>13. Egly, U., Seidl, M., Woltran, S.: A Solver for QBFs in Nonprenex Form. In Proceedings of the 17th European Conference on Artificial Intelligence (ECAI 2006). (2006) 477–481</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref72</id>
      <referenceIdString>72</referenceIdString>
      <authors/>
      <referenceText>14. Oikarinen, E., Janhunen, T.: Verifying the Equivalence of Logic Programs in the Disjunctive Case. In Proceedings of the 7th International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR-7). Volume 2923 of LNCS, Springer (2004) 180–193</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref73</id>
      <referenceIdString>73</referenceIdString>
      <authors/>
      <referenceText>15. Chen, Y., Lin, F., Li, L.: SELP - A System for Studying Strong Equivalence Between Logic Programs. In Proceedings of the 8th International Conference on Logic Programming and Non Monotonic Reasoning (LPNMR 2005). Volume 3552 of LNCS, Springer (2005) 442– 446</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>