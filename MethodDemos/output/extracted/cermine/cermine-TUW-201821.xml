<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
  <front>
    <journal-meta />
    <article-meta>
      <title-group>
        <article-title>Advancing Multi-Context Systems by ⋆ Inconsistency Management</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author">
          <string-name>Antonius Weinzierl</string-name>
          <email>weinzierl@kr.tuwien.ac.at</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <aff id="aff0">
          <label>0</label>
          <institution>Institute of Information Systems Vienna University of Technology Favoritenstraße 9-11</institution>
          ,
          <addr-line>A-1040 Vienna</addr-line>
          ,
          <country country="AT">Austria</country>
        </aff>
      </contrib-group>
      <fpage>17</fpage>
      <lpage>25</lpage>
      <abstract>
        <p>Multi-Context Systems are an expressive formalism to model (possibly) non-monotonic information exchange between heterogeneous knowledge bases. Such information exchange, however, often comes with unforseen side-effects leading to violation of constraints, making the system inconsistent, and thus unusable. Although there are many approaches to assess and repair a single inconsistent knowledge base, the heterogeneous nature of Multi-Context Systems poses problems which have not yet been addressed in a satisfying way: How to identify and explain a inconsistency that spreads over multiple knowledge bases with different logical formalisms (e.g., logic programs and ontologies)? What are the causes of inconsistency if inference/information exchange is nonmonotonic (e.g., absent information as cause)? How to deal with inconsistency if access to knowledge bases is restricted (e.g., companies exchange information, but do not allow arbitrary modifications to their knowledge bases)? Many traditional approaches solely aim for a consistent system, but automatic removal of inconsistency is not always desireable. Therefore a human operator has to be supported in finding the erroneous parts contributing to the inconsistency. In my thesis those issues will be adressed mainly from a foundational perspective, while our research project also provides algorithms and prototype implementations.</p>
      </abstract>
    </article-meta>
  </front>
  <body>
    <sec id="sec-1">
      <title>Introduction</title>
      <p>
        Multi-Context Systems (MCSs) are an expressive formalism for (possibly)
nonmonotonic knowledge exchange between heterogeneous knowledge sources. These
sources are called contexts and formalized as abstract ‘logics’. Information flow
between contexts is specified using bridge rules which look and behave similar
to rules in non-monotonic logic programming (cf. [
        <xref ref-type="bibr" rid="ref15">15</xref>
        ]):
(k : s) ← (c1 : p1), . . . , (cj : pj ), not(cj+1 : pj+1), . . . , not(cm : pm).
(1)
Such a rule states that information s is added to context k if for 1 ≤ i ≤ j
knowledge pi is present in context ci and for j + 1 ≤ i ≤ m knowledge pi is
⋆ Supported by the Vienna Science and Technology Fund (WWTF), grant ICT08-020.
absent in ci. Following common terminology p1, . . . , pm are called beliefs (each
of their respective context) and s is the head formula of the bridge rule.
      </p>
      <p>Consider a hospital where a database with patient records, a medical
ontology, and an expert system shall be working together giving decision support
on patient medications. The MCS framework is a good choice to realize this.
Assume for patient Sue, the database knows that a) her X-Ray result indicates
pneumonia, b) a certain blood marker is present, and c) she has no known
allergies. The ontology imports information on X-Ray and blood tests using bridge
rules</p>
      <p>(Conto : xray(Sue)) ← (Cpatients : labresult (Sue, xray)).</p>
      <p>(Conto : marker (Sue)) ← (Cpatients : labresult (Sue, marker )).</p>
      <p>As the ontology contains the axiom xray ⊓marker ⊑ atyp pneu it concludes that
Sue has a atypical pneumonaia, severe kind of pneumonia. Finally, the expert
system, a logic program containing rules give weak ∨ give strong : −pneumonia.
and give strong : −atyp pneumonia. suggests one out of two kinds of antibiotics
if a patient has pneumonia. But it also respects potential allergies by the
constraint : −give strong, not allowed strong. As Sue has atypical pneumonia, only
the strong antibiotic will help, so the logic program suggests this.</p>
      <p>Now assume that Sue is allergic to strong antibiotics, a case that actually
happens in the real world. Then the expert system can give no valid suggestion as
strong antibiotics have to be given, but at the same time they are forbidden to be
applied. This results in the whole system having no ‘model’ satisfying deductions
of all knowledge bases and bridge rules. We call such an MCS inconsistent. 1</p>
      <p>
        By this example, we identify the following open problems:
– the inconsistency above is present due to tuples in the database,
terminological assertions in the ontology, logic programming rules in the expert
system and, a set of bridge rules establishing the information exchange. In
what terms should the inconsistency be described and is there a uniform
description irrespective of the specific formalisms used in contexts?
Nonmonotonicity of bridge rules and contexts is an additional challenge to such
a description.
– Given such a description it is very likely that multiple ways exist to restore
consistency. Removing some bridge rules would make the above example
consistent, but also removal of tuples describing lab results. Similarly, addition
of new bridge rules could resolve the inconsistency. If multiple options exist,
which is the most preferred to restore consistency? Is it possible to do this
in a heterogeneous way, i.e., can the designer of an MCS use a formalism
of his own choice to specify his preference? Can such preference be given
only for specific parts of an MCS and preference for other parts differently
expressed?
– In the above example, the inconsistency can be dealt with locally, e.g., the
expert system could switch to use paracoherent semantics and the MCS
1 A complete formalisation of this example is available in [
        <xref ref-type="bibr" rid="ref12">12</xref>
        ].
becomes consistent. For MCSs with cyclic information flow, however, this
might be impossible as cyclic information flow can be such that each context
returns valid belief sets (“models”), but still for the overall system it does not
fit together. How far does local inconsistency management help to resolve
inconsistency, e.g., for MCSs with acyclic information flow?
– Besides inconsistency, is the MCS framework so versatile as to use other
kinds of rules to connect contexts, e.g., SPARQL queries for information
exchange?
      </p>
      <p>As research on these topics has been started two years ago, the rest of this
paper will briefly present results adressing above questions. Regarding research
methodologies, we built analogies from existing techniques, e.g., Reiter’s
diagnosis. For algorithms we resorted to reductions to computational logic and
metareasoning transformations, e.g., preference is handled in this way. Whenever
possible, our invented methods are open so that legacy systems may be integrated
to achieve certain tasks, e.g., local inconsistency management.</p>
      <p>Contributions summary:
– we developed a uniform representation of inconsistency in terms of bridge
rules. This representation leads a) to the notion of inconsistency explanation
which separates different sources of inconsistency and points out those bridge
rules creating inconsistency and b) to the notion of diagnosis which induce
all possible repairs of an inconsistent MCS. Notably, both notions coincide
on the overall set of bridge rules which are marked ‘faulty.
– on top of those notions, we developed a transformation-based technique to
allow meta-reasoning on diagnoses of an inconsistent MCS. This allows
system designers to express preferences over diagnoses in a formalism of their
own choice. The same techinque also allows to filter out undesired diagnoses.
– for local inconsistency management, a generalization of the MCS formalism
was developed allowing to use existing methods of inconsistency management
locally for a context. The introduced notion of a context manager allows to
employ arbitrary knowledge management techniques locally at a context. It
is important that the employed manager can change a knowledge base in a
broad range and therefore it can also do other operations like view updates,
belief revision, logic program updates, etc.
– for above notions the computational complexity also was analysed.
– to show the versatility of the ideas behind MCS, we also introduced a
modified notion of MCS where knowledge exchange is specified using SPARQL
queries.</p>
      <p>Finally, we also implemented prototypes for evaluating MCSs and computing
diagnoses and explanations of inconsistent MCSs.</p>
      <p>The remainder of this paper is organized as follows: In Section 2 related work
is discussed while Section 3 recapitulates the formal semantics of MCS and our
basic notion for inconsistency diagnosis/explanation, it is followed by a short
presentation of major achievements in the last two years in Section 4. Finally,
Section 5 is an outlook on future work.</p>
    </sec>
    <sec id="sec-2">
      <title>Related Work</title>
      <p>
        With the seminal work of [
        <xref ref-type="bibr" rid="ref19">19</xref>
        ] and [
        <xref ref-type="bibr" rid="ref16">16</xref>
        ] the notion of context has been
introduced to artificial intelligence and logic. In these works, a context is a regarded
as a certain point of view in which formal reasoning takes place. The Trento
school (cf. [
        <xref ref-type="bibr" rid="ref17 ref22">17,22</xref>
        ]) formalized and improved this understanding of context. It is
notable, however, that those first frameworks consider homogeneous, monotonic
logics for representing a context. With [
        <xref ref-type="bibr" rid="ref21 ref9">9,21</xref>
        ] non-monotonicity was introduced
to Multi-Context Systems. Although default negation is added to bridge rules,
contexts still are homogeneous or monotonic. Only with [
        <xref ref-type="bibr" rid="ref7">7</xref>
        ] the framework has
been generalized for non-monotonic bridge rules and heterogeneous contexts.
This finally allows to use arbitrary knowledge sources that are connected by
(possibly) non-monotonic bridge rules. Our research is based on this notion of
MCSs.
      </p>
      <p>
        To deal with inconsistency, in [
        <xref ref-type="bibr" rid="ref5">5</xref>
        ] defeasible rules are introduced as a way of
establishing information exchange in MCS. Defeasible rules are similar to bridge
rules, but their semantics differs as a defeasible rule does not fire if it would cause
an inconsistency by doing so. Several algorithms based on preference orders (or
argumentation frameworks [
        <xref ref-type="bibr" rid="ref4">4</xref>
        ]) have been proposed. Inconsistency is resolved
inherently, but no deeper inconsistency analysis is possible. For our hospital
example this would mean that some information simply would not be passed
along, e.g., forgetting the illness of Sue. Most of the proposed algorithms are
based on provenance, which means that context internals have to be exhibited
to other contexts. A company making profit by allowing third parties to use its
knowledge base, however, will not risk its business by providing such information.
      </p>
      <p>
        Aside from MCS, other areas deal with knowledge integration and its issues.
Peer-to-Peer (p2p) systems [
        <xref ref-type="bibr" rid="ref10 ref24">24,10</xref>
        ] are similar as knowledge sources interchange
pieces of information. Although the notion of a peer is very similar to a context
in MCS, the essential feature of p2p systems is that peers may leave and join
the system arbitrarily. Therefore research seeks to cope with inconsistency by
isolating faulty contexts and simply ignore their information instead of analysing
the inconsistency and aiming for a consistent system.
      </p>
      <p>
        Information integration on the other hand deals extensively with issues like
constraint violations that stem from the integration of several databases into
a single one (cf. [
        <xref ref-type="bibr" rid="ref6">6</xref>
        ] for a survey on data fusion). Its main differences to MCS
are that the result of data fusion is one single database which usually uses
relational algebra for knowledge representation. MCSs, however, require
inconsistency management for multiple, heterogeneous knowledge bases which are not
restricted to a relational setting.
      </p>
      <p>
        For many formalisms, methods of inconsistency handling have been invented,
e.g., belief revision or possibilistic reasoning (e.g. [
        <xref ref-type="bibr" rid="ref3">3</xref>
        ]) for classical logic,
paracoherent semantics for logic programs, etc. These methods can resolve
inconsistency locally at a context (cf. Section 4), but they can not guarantee a consistent
system. Also, most of those methods are only applicable to a specific formalism
instead of a heterogeneous non-monotonic system.
      </p>
    </sec>
    <sec id="sec-3">
      <title>MCS Preliminaries</title>
      <p>Each context of an MCS is seen as a knowledge base built on an underlying logic.
To capture different kinds of logics, this notion is general and not defined in the
bottom-up style of inductive definitions for syntax and semantics. Instead, its
approach is top-down, directly working with sets of well-formed formulas (wffs)
and models (called belief sets). The semantics of a logic then only maps each set
of wffs to a set of belief sets, i.e., the models of the wffs.</p>
      <p>Formally, a logic L = (KBL, BSL, ACCL) consists, of the following
components: 1) KBL is the set of well-formed knowledge bases of L where each element
of KBL is a set (of formulas). 2) BSL is the set of possible belief sets where we
assume that each element of BSL is a set (i.e.,a model containing all formulas
that are considered true). 3) ACCL : KBL → 2BSL is a function describing
the semantics of L by assigning each knowledge base a set of acceptable belief
sets. This concept of a logic captures many monotonic and non-monotonic logics,
e.g., classical logic, description logics, modal, default, and autoepistemic logics,
circumscription, and logic programs under the answer set semantics.</p>
      <p>A Multi-Context System M = (C1, . . . , Cn) is a collection of contexts Ci =
(Li, kbi, bri), 1 ≤ i ≤ n, where Li = (KBi, BSi, ACCi) is a logic, kbi ∈
KBi a knowledge base, and bri is a set of bridge rules of form (1) over
logics (L1, . . . , Ln). Furthermore, for each bridge rule r ∈ bri its head formula s
is compatible with Ci, i.e., for each H ⊆ {s | r ∈ br and (i : s) is the head of r}
holds kb ∪ H ∈ KBLi .</p>
      <p>
        A belief state S = (S1, . . . , Sn) of an MCS M = (C1, . . . , Cn) is a belief set
for every context, i.e., Si ∈ BSi for all 1 ≤ i ≤ n. The semantics of MCS is
defined in terms of equilibria, i.e., belief states that reproduce themselves under
the application of bridge rules. Formally, let M be an MCS, Ci a context of M
and S = (S1, . . . , Sn) a belief state of M , then an bridge rule r of form (1) is
applicable wrt. S, denoted by S |= body (r), iff pℓ ∈ Scℓ for 1 ≤ ℓ ≤ j and pℓ ∈/ Scℓ
for j &lt; ℓ ≤ m. Let appi(S) = {hd (r) | r ∈ bri ∧ S |= body (r)} denote the heads
of all applicable bridge rules of context Ci under S, then S = (S1, . . . , Sn) is an
equilibrium of M if and only if Si ∈ ACCi(appi(S)) for 1 ≤ i ≤ n.
Basic Notions for Inconsistency Analysis (cf. [
        <xref ref-type="bibr" rid="ref12">12</xref>
        ]): We call an MCS M
inconsistent iff no belief state of M is an equilibrium. To analyse and explain
the inconsistency in an MCS, two notions have been developed:
consistencybased diagnosis and entailment-based inconsistency explanation. Both notions
use bridge rules to characterize ‘faulty’ information exchange. Intuitively, a
diagnosis states how an inconsistent MCS can be changed to get a consistent system
and an explanation shows what parts of the system create the inconsistency.
      </p>
      <p>For an MCS M , brM denotes the set of all bridge rules occuring in M , M [R]
denotes a modified MCS where all bridge rules of M are replaced by those of
R, and M |= ⊥ denotes that M is inconsistent. Given an MCS M , a diagnosis
of M is a pair (D1, D2),D1, D2 ⊆ brM , s.t. M [brM \ D1 ∪ heads (D2)] 6|= ⊥.
An explanation of M is a pair (E1, E2) of sets E1, E2 ⊆ brM of bridge rules
s.t. for all (R1, R2) where E1 ⊆ R1 ⊆ brM and R2 ⊆ brM \ E2, it holds that
M [R1 ∪ heads (R2)] |= ⊥.</p>
      <p>
        For a concise characterization, one usually focuses on subset-minimal
diagnoses and explanations. The basic ideas behind both notions appear also in
Reiter’s seminal work on diagnosis [
        <xref ref-type="bibr" rid="ref20">20</xref>
        ]. Our diagnosis is similar to his notion
and our explanation is similar to (minimal) inconsistent sets. For differences, we
assume the source of inconsistency to be some faulty information exchange, so we
only consider bridge rules, and because of the non-monotonic nature of MCSs,
a bridge rule can be faulty by firing when it should not and also by not firing
when it should. In classical diagnosis, only the former is relevant as monotonic
logics only become inconsistent by that. The set of minimal diagnoses can also
be seen as describing all minimal repairs, while the set of minimal explanations
show hows inconsistency is caused in the system. The set E2 in an explanation
also shares some ideas with consistency restoring rules (cf. [
        <xref ref-type="bibr" rid="ref2">2</xref>
        ]) of logic programs.
4
      </p>
    </sec>
    <sec id="sec-4">
      <title>Contributions: Methods of Inconsistency Management</title>
      <p>
        This section presents contributions and answers the motivational questions raised
in the introduction. These are the major published results of my graduate
research. Note that authors are listed alphabetically for the respective publications.
Inconsistency Assessment: Having jointly developed and investigated, the
basic notions for inconsistency analysis, the next step was developing methods
to assess inconsistency qualitatively, i.e., filter diagnoses with undesired
properties and select most preferred ones. In the spirit of MCS, we do not apply a
specific formalism for preference or filters on diagnoses, but rather show how
a transformation of the MCS and slight adaption of the notion of diagnosis is
sufficient to achieve the desired effects in [
        <xref ref-type="bibr" rid="ref13">13</xref>
        ].
      </p>
      <p>
        As one of the strengths of MCS is the ability to allow arbitrary formalisms for
knowledge representation inside contexts, we do not want to restrict the users to
a specific kind of representation of filters (or preferences). We therefore devised
a meta-reasoning transformation which allows certain contexts to observe which
diagnosis is applied to the MCS. The desired filter then is realized inside such
an observer context (in a formalisms which is best suited for this task). So an
MCS M is transformed into an MCS Mf where an additional observer context
ob is added together with some additional bridge rules (details cf. [
        <xref ref-type="bibr" rid="ref13">13</xref>
        ]). As Mf
contains all contexts and bridge rules of M , every diagnosis of M can also be
applied to Mf . If ob detects an undesired diagnosis D′, then ob simply becomes
inconsistent, i.e., having no acceptable belief set. Therefore D′ is no diagnosis of
Mf , but all other diagnoses of M are diagnoses of Mf . This allows to compute
all filtered diagnoses with the same algorithm as for computing subset-minimal
diagnoses and it also allows to specify the filter in any desired formalism.
      </p>
      <p>The meta-reasoning transformation also can be applied for multiple
observation contexts where each observer only sees some bridge rules instead of all, thus
preserving information hiding. As a similar meta-reasoning transformation can
be used for comparison of diagnoses, it is possible to realize any given preference
order on diagnoses and select the most preferred one. In general, however, this
requires exponentially many more bridge rules in the transformed system, but
for restricted classes of preference orders it is feasible.</p>
      <p>Inconsistency management at the level of contexts: For many specific
logics and knowledge formalisms, solutions to deal with inconsistency have been
developed in the past, e.g., belief revision and paraconsistency for logics,
paracoherent logic programming for logic programs, etc. For contexts using the
underlying formalism it is desireable that MCSs also offer the same methods of
inconsistency handling. Those methods, however, require to modify a knowledge
base in more ways, than just the addition of formulas as bridge rules can do.</p>
      <p>
        We therefore propose managed Multi-Context Systems (mMCS) in [
        <xref ref-type="bibr" rid="ref8">8</xref>
        ] where
each context is equiped with a manager that can apply arbitrary changes to
the context’s knowledge base. Bridge rules in an mMCS are like those of MCS,
but their head contains a unary command op, e.g., revise(s), delete(s), add (s),
to apply the resp. operation on the formula s and the knowledge base of the
context.
      </p>
      <p>Managed MCS are a significant generalization of MCS as management
functions can be used to realize a multitude of tasks: belief revision, view updates,
updates of logic programs. To us, the most interesting is to ensure that
contexts have a ‘model’ for any input. Such contexts are called totally coherent.
Most notably even mMCS with totally coherent contexts cannot guarantee that
the overall system has an equilibrium, but they ensure that inconsistency is
only caused by odd-cyclic information flow. It directly follows that any acyclic
mMCS with totally coherent contexts is consistent, thus proving local
inconsistency management sufficient for acyclic MCS.</p>
      <p>
        Beyond bridge rules: In [
        <xref ref-type="bibr" rid="ref23">23</xref>
        ] we introduce MCS where knowledge exchange is
realised using SPARQL construct-queries. This is surprisingly simple and again
shows the versatility of MCS. The resulting SPARQL-MCS framework is related
to the MWeb approach [
        <xref ref-type="bibr" rid="ref1">1</xref>
        ], but our treatment of variables is different.
5
      </p>
    </sec>
    <sec id="sec-5">
      <title>Future Work</title>
      <p>As shown above, we were able to answer several foundational questions, give a
uniform representation of inconsistency in heterogeneous MCSs, an open
integration of preference-based inconsistency assessment, investigating the impact of
local inconsistency handling, and making the MCS formalism capable of dealing
with arbitrary changes to the knowledge bases of an MCS.</p>
      <p>
        To evaluate the feasibility of the developed methods, we also aim for a
reference application which is currently in the making: querying of a DNA database
posing questions in (almost) natural language using an ontology and
answerset programs. Intital steps towards exchanging large amounts of information
(cf. [
        <xref ref-type="bibr" rid="ref14">14</xref>
        ]) also showed that more specialised algorithms are needed.
      </p>
      <p>
        Investigations whether approximation operators of [
        <xref ref-type="bibr" rid="ref11">11</xref>
        ] for logic programs can
be translated to MCSs and transferring optimisations for abductive diagnosis
(e.g.,[
        <xref ref-type="bibr" rid="ref18">18</xref>
        ]) to MCSs are also open tasks.
6
      </p>
    </sec>
    <sec id="sec-6">
      <title>Acknowledgements</title>
      <p>I am very grateful to my advisor Thomas Eiter, the principal investigator of our
research project Michael Fink, and my colleague Peter Schu¨ller who provided
guidance, and helped with many fruitful discussions. Thank you.</p>
    </sec>
  </body>
  <back>
    <ref-list>
      <ref id="ref1">
        <mixed-citation>
          1.
          <string-name>
            <surname>Analyti</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Antoniou</surname>
            ,
            <given-names>G.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Damasio</surname>
            ,
            <given-names>C.V.</given-names>
          </string-name>
          :
          <article-title>MWeb: A principled framework for modular web rule bases and its semantics</article-title>
          .
          <source>ACM Trans. Comput. Logic</source>
          <volume>12</volume>
          (
          <issue>2</issue>
          ) (
          <year>2011</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref2">
        <mixed-citation>
          2.
          <string-name>
            <surname>Balduccini</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Gelfond</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          :
          <article-title>Logic programs with consistency-restoring rules</article-title>
          .
          <source>In: International Symposium on Logical Formalization of Commonsense Reasoning</source>
          , AAAI 2003 Spring Symposium Series. pp.
          <fpage>9</fpage>
          -
          <lpage>18</lpage>
          (
          <year>2003</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref3">
        <mixed-citation>
          3.
          <string-name>
            <surname>Benferhat</surname>
            ,
            <given-names>S.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Lagrue</surname>
            ,
            <given-names>S.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Yahi</surname>
            ,
            <given-names>S.</given-names>
          </string-name>
          :
          <article-title>Bridging possibilistic conditional knowledge bases and partially ordered bases</article-title>
          .
          <source>In: JELIA</source>
          . pp.
          <fpage>38</fpage>
          -
          <lpage>50</lpage>
          (
          <year>2010</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref4">
        <mixed-citation>
          4.
          <string-name>
            <surname>Bikakis</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Antoniou</surname>
          </string-name>
          , G.:
          <article-title>Contextual argumentation in ambient intelligence</article-title>
          .
          <source>In: LPNMR</source>
          . pp.
          <fpage>30</fpage>
          -
          <lpage>43</lpage>
          (
          <year>2009</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref5">
        <mixed-citation>
          5.
          <string-name>
            <surname>Bikakis</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Antoniou</surname>
            ,
            <given-names>G.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Hassapis</surname>
            ,
            <given-names>P.</given-names>
          </string-name>
          :
          <article-title>Alternative strategies for conflict resolution in multi-context systems</article-title>
          .
          <source>In: AIAI</source>
          . pp.
          <fpage>31</fpage>
          -
          <lpage>40</lpage>
          (
          <year>2009</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref6">
        <mixed-citation>
          6.
          <string-name>
            <surname>Bleiholder</surname>
            ,
            <given-names>J.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Naumann</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          :
          <article-title>Data fusion</article-title>
          .
          <source>ACM Comput. Surv</source>
          .
          <volume>41</volume>
          (
          <issue>1</issue>
          ),
          <fpage>1</fpage>
          -
          <lpage>41</lpage>
          (
          <year>2008</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref7">
        <mixed-citation>
          7.
          <string-name>
            <surname>Brewka</surname>
            ,
            <given-names>G.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Eiter</surname>
            ,
            <given-names>T.</given-names>
          </string-name>
          :
          <article-title>Equilibria in heterogeneous nonmonotonic multi-context systems</article-title>
          .
          <source>In: AAAI</source>
          . pp.
          <fpage>385</fpage>
          -
          <lpage>390</lpage>
          (
          <year>2007</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref8">
        <mixed-citation>
          8.
          <string-name>
            <surname>Brewka</surname>
            ,
            <given-names>G.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Eiter</surname>
            ,
            <given-names>T.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Fink</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Weinzierl</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          :
          <article-title>Managed multi-context systems</article-title>
          .
          <source>In: IJCAI</source>
          (
          <year>2011</year>
          ), to appear.
        </mixed-citation>
      </ref>
      <ref id="ref9">
        <mixed-citation>
          9.
          <string-name>
            <surname>Brewka</surname>
            ,
            <given-names>G.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Roelofsen</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Serafini</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          :
          <article-title>Contextual default reasoning</article-title>
          .
          <source>In: IJCAI</source>
          . pp.
          <fpage>268</fpage>
          -
          <lpage>273</lpage>
          (
          <year>2007</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref10">
        <mixed-citation>
          10.
          <string-name>
            <surname>Calvanese</surname>
            ,
            <given-names>D.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Giacomo</surname>
            ,
            <given-names>G.D.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Lembo</surname>
            ,
            <given-names>D.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Lenzerini</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Rosati</surname>
          </string-name>
          , R.:
          <article-title>Inconsistency tolerance in p2p data integration: An epistemic logic approach</article-title>
          .
          <source>Inf. Syst</source>
          .
          <volume>33</volume>
          (
          <issue>4-5</issue>
          ),
          <fpage>360</fpage>
          -
          <lpage>384</lpage>
          (
          <year>2008</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref11">
        <mixed-citation>
          11.
          <string-name>
            <surname>Denecker</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Marek</surname>
            ,
            <given-names>V.W.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Truszczynski</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          :
          <article-title>Ultimate approximation and its application in nonmonotonic knowledge representation systems</article-title>
          .
          <source>Inf. Comput</source>
          .
          <volume>192</volume>
          (
          <issue>1</issue>
          ),
          <fpage>84</fpage>
          -
          <lpage>121</lpage>
          (
          <year>2004</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref12">
        <mixed-citation>
          12.
          <string-name>
            <surname>Eiter</surname>
            ,
            <given-names>T.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Fink</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          , Schu¨ller,
          <string-name>
            <given-names>P.</given-names>
            ,
            <surname>Weinzierl</surname>
          </string-name>
          ,
          <string-name>
            <surname>A.</surname>
          </string-name>
          :
          <article-title>Finding explanations of inconsistency in multi-context systems</article-title>
          .
          <source>In: KR</source>
          (
          <year>2010</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref13">
        <mixed-citation>
          13.
          <string-name>
            <surname>Eiter</surname>
            ,
            <given-names>T.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Fink</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Weinzierl</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          :
          <article-title>Preference-based inconsistency assessment in multi-context systems</article-title>
          .
          <source>In: JELIA</source>
          . pp.
          <fpage>143</fpage>
          -
          <lpage>155</lpage>
          (
          <year>2010</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref14">
        <mixed-citation>
          14.
          <string-name>
            <surname>Fink</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Ghionna</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Weinzierl</surname>
            ,
            <given-names>A.</given-names>
          </string-name>
          :
          <article-title>Relational information exchange and aggregation in multi-context systems</article-title>
          .
          <source>In: LPNMR</source>
          . pp.
          <fpage>120</fpage>
          -
          <lpage>133</lpage>
          (
          <year>2011</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref15">
        <mixed-citation>
          15.
          <string-name>
            <surname>Gelfond</surname>
            ,
            <given-names>M.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Lifschitz</surname>
            ,
            <given-names>V.</given-names>
          </string-name>
          :
          <article-title>Classical negation in logic programs</article-title>
          and disjunctive databases.
          <source>New Generation Comput</source>
          .
          <volume>9</volume>
          (
          <issue>3</issue>
          /4),
          <fpage>365</fpage>
          -
          <lpage>386</lpage>
          (
          <year>1991</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref16">
        <mixed-citation>
          16.
          <string-name>
            <surname>Giunchiglia</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          :
          <article-title>Abstract contextual reasoning (</article-title>
          <year>1993</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref17">
        <mixed-citation>
          17.
          <string-name>
            <surname>Giunchiglia</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Serafini</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          :
          <article-title>Multilanguage hierarchical logics or: How we can do without modal logics</article-title>
          .
          <source>Artif. Intell</source>
          .
          <volume>65</volume>
          (
          <issue>1</issue>
          ),
          <fpage>29</fpage>
          -
          <lpage>70</lpage>
          (
          <year>1994</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref18">
        <mixed-citation>
          18. de Kleer,
          <string-name>
            <surname>J.:</surname>
          </string-name>
          <article-title>Focusing on probable diagnoses</article-title>
          .
          <source>In: AAAI</source>
          . pp.
          <fpage>842</fpage>
          -
          <lpage>848</lpage>
          (
          <year>1991</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref19">
        <mixed-citation>
          19.
          <string-name>
            <surname>McCarthy</surname>
            ,
            <given-names>J.:</given-names>
          </string-name>
          <article-title>Notes on formalizing context</article-title>
          .
          <source>In: IJCAI</source>
          . pp.
          <fpage>555</fpage>
          -
          <lpage>562</lpage>
          (
          <year>1993</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref20">
        <mixed-citation>
          20.
          <string-name>
            <surname>Reiter</surname>
          </string-name>
          , R.:
          <article-title>A theory of diagnosis from first principles</article-title>
          .
          <source>Artif. Intell</source>
          .
          <volume>32</volume>
          (
          <issue>1</issue>
          ),
          <fpage>57</fpage>
          -
          <lpage>95</lpage>
          (
          <year>1987</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref21">
        <mixed-citation>
          21.
          <string-name>
            <surname>Roelofsen</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Serafini</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          :
          <article-title>Minimal and absent information in contexts</article-title>
          .
          <source>In: IJCAI</source>
          . pp.
          <fpage>558</fpage>
          -
          <lpage>563</lpage>
          (
          <year>2005</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref22">
        <mixed-citation>
          22.
          <string-name>
            <surname>Roelofsen</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Serafini</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          :
          <article-title>Minimality and non-determinism in multi-context systems</article-title>
          .
          <source>In: CONTEXT</source>
          . pp.
          <fpage>424</fpage>
          -
          <lpage>435</lpage>
          (
          <year>2005</year>
          )
        </mixed-citation>
      </ref>
      <ref id="ref23">
        <mixed-citation>
          23. Schu¨ller,
          <string-name>
            <given-names>P.</given-names>
            ,
            <surname>Weinzierl</surname>
          </string-name>
          ,
          <string-name>
            <surname>A.</surname>
          </string-name>
          :
          <article-title>Semantic reasoning with sparql in heterogeneous multicontext systems</article-title>
          .
          <source>In: Semantic Search over the Web</source>
          (
          <year>2011</year>
          ), to appear
        </mixed-citation>
      </ref>
      <ref id="ref24">
        <mixed-citation>
          24.
          <string-name>
            <surname>Serafini</surname>
            ,
            <given-names>L.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Giunchiglia</surname>
            ,
            <given-names>F.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Mylopoulos</surname>
            ,
            <given-names>J.</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Bernstein</surname>
            ,
            <given-names>P.</given-names>
          </string-name>
          :
          <article-title>Local relational model: A logical formalization of database coordination</article-title>
          .
          <source>In: CONTEXT</source>
          . pp.
          <fpage>286</fpage>
          -
          <lpage>299</lpage>
          (
          <year>2003</year>
          )
        </mixed-citation>
      </ref>
    </ref-list>
  </back>
</article>