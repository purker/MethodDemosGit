<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
  <front>
    <journal-meta />
    <article-meta>
      <title-group>
        <article-title>Informatisches Denken in der Primarstufe: die Wiener Zauberschule der Informatik (WIZIK)</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author">
          <string-name>Johann Stockinger</string-name>
          <email>johann.stockinger@ocg.at</email>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Gerald Futschek</string-name>
          <email>gerald.futschek@tuwien.ac.at</email>
        </contrib>
      </contrib-group>
      <pub-date>
        <year>2013</year>
      </pub-date>
      <abstract>
        <p>Die Wiener Zauberschule der Informatik (WIZIK) führt Kinder der Primarstufe an die Denkweise der Informatik heran und vermittelt ihnen erste informatische Kompetenzen. Die Kinder lernen spielerisch verschiedene Problemlösungsstrategien kennen und erhalten einen ersten Einblick in die Grundlagen logischen und prozessorientierten Denkens. Für das 21. Jahrhundert werden besondere Fähigkeiten und Kompetenzen benötigen. Dazu zählen Computerkenntnisse und besonders Kompetenzen im kreativ-innovativen Bereich, gekoppelt mit Problemlösungskompetenzen, siehe z.B. auch die Schlüsselkompetenzen der Europäischen Kommission [EK16]. Das von der Wirtschaftsagentur Wien in den Jahren 2014/15 geförderte Projekt WIZIK möchte diese Kompetenzen bei SchülerInnen der Primarstufe fördern und dabei Begeisterung für die Informatik wecken. Die Österreichische Computer Gesellschaft OCG hatte in den Jahren 2012/13 das von der Wirtschaftsagentur Wien geförderte Projekt „ITAKE - die Informationstechnologie des Alltags für Kinder erfahrbar machen“ [OCG13] durchgeführt. Zu den Zielen zählte die Förderung der kreativen Fähigkeiten von Kindern als Voraussetzung für eine kreativinnovative Gesellschaft. Bei der Umsetzung wurde auf einen spielerischen Zugang zur Robotertechnologie gesetzt. Im vorschulischen Bereich wurden dabei Bee-Bots eingesetzt (tastenprogrammierbare Bienenroboter) und in der Primarstufe in erster Linie das LEGO® WeDo™ Construction Kit (Version 1.0) in Kombination mit der kindergerechten Programmiersprache Scratch. Damit konnten neben der Steuerung der roboterartigen Gebilde zusätzlich auch Animationen auf dem Bildschirm gestaltet werden und so die virtuelle Welt mit der realen Außenwelt verknüpft werden.</p>
      </abstract>
      <kwd-group>
        <kwd>Informatik</kwd>
        <kwd>Informatisches Denken</kwd>
        <kwd>Computational Thinking</kwd>
        <kwd>Primarstufe</kwd>
        <kwd>Computer Science Unplugged</kwd>
        <kwd>Biber der Informatik</kwd>
      </kwd-group>
    </article-meta>
  </front>
  <body>
    <sec id="sec-1">
      <title>Einleitung</title>
    </sec>
    <sec id="sec-2">
      <title>Entstehungsgeschichte</title>
      <p>Die in diesem Rahmen an den Schulen durchgeführten Workshops kamen sowohl bei
den LehrerInnen als auch bei SchülerInnen sehr gut an. Allerdings ist bei derartigen
Projekten die Nachhaltigkeit nicht immer zufriedenstellend. Wiener Volksschulklassen
sind üblicherweise nur mit zwei PCs ausgestattet. Die Anschaffung und Wartung der
Roboterbausätze für die Schulen ist nicht nur mit finanziellem Aufwand verbunden,
sondern auch mit einem erheblichen Wartungsaufwand. Zusätzlich müssten die
LehrerInnen entsprechend eingeschult werden.</p>
      <p>Aus diesen Erfahrungen heraus entstand die Überlegung, nach Möglichkeiten zu suchen,
das sogenannte „informatische Denken“ („Computational Thinking“) mit weniger
Aufwand, dabei aber umso rascher zu vermitteln. Rein technologisch gesehen sollte
dafür ein sehr niederschwelliger Zugang gefunden werden.
3</p>
    </sec>
    <sec id="sec-3">
      <title>Die Umsetzung</title>
      <p>Bald war klar, dass für Kinder eine attraktive Bezeichnung notwendig ist; eine
„Zauberschule“ bot sich dafür an. Eine Recherche ergab, dass die Technische Universität
Aachen schon ein derartiges Konzept unter der Bezeichnung „Zauberschule Informatik“
[BLS11] umgesetzt hatte. In Absprache mit den dortigen Initiatoren nannten wir unsere
Initiative „Wiener Zauberschule der Informatik (WIZIK)“. Als Zielgruppe sind die
Kinder der dritten und vierten Schulstufe vorgesehen.</p>
      <p>Bei der Auswahl der Aktivitäten legten wir Wert darauf, dass möglichst viele Aktivitäten
eine Koordination und Kooperation der Kinder erfordern. Auch sollten alle Aktivitäten
einen direkten Bezug zur Informatik haben. Zudem sollten sie inhaltlich als Ergänzung
und Bereicherung der Grundkompetenzen „Lesen, Schreiben, Rechnen“ dienen. Für die
LehrerInnen sollten sich die Informatik Aktivitäten möglichst nahtlos in ihr bestehendes
Lehrangebot integrieren lassen.
3.1</p>
      <sec id="sec-3-1">
        <title>Aufgaben aus Computer Science Unplugged</title>
        <p>Unter den Aktivitäten von Computer Science Unplugged [CSU15] finden sich einige, die
auch schon in der Primärstufe gut vermittelt werden können. Als Einstieg eignen sich
besonders gut die Punktekarten für die Darstellung der binären Zahlen und für das binäre
Zählen. Die Kinder sind mit Begeisterung dabei und lernen dabei auch einiges über die
Geschichte des Zählens und ein besseres Verständnis für das in der Schule gelernte
Dezimalsystem [JG16a,JG16b]. Ergänzend dazu kann ein selbstgebasteltes Flip-Flop
vorgeführt werden, bei dem durch eine wiederholt herablaufende Kugel automatisch
binär gezählt wird.</p>
        <p>Sortieralgorithmen können sehr gut mit Filmdosen umgesetzt werden, die z.B. mit Sand
unterschiedlich gefüllt werden. Als Hilfsmittel bekommen die SchülerInnen nur einen
Bleistift und ein Lineal und müssen damit eigenständig einen Lösungsweg finden, um
Wiener Zauberschule der Informatik (WIZIK)
die Filmdosen nach dem Gewicht zu sortieren. Wichtig ist, dass ein Lösungsweg
selbständig entdeckt wird, siehe auch [FM10]. Erst danach können je nach Situation
auch die Grundideen weiterer Sortieralgorithmen besprochen werden. Eine Schulklasse
hatte sogar eine eigene Variante des Bubblesort-Algorithmus getanzt, Video siehe
[IV15].</p>
        <p>Mit dem Beispiel des „armen Landkartenmalers“, der mit möglichst wenigen Farben
Landkarten einfärben soll, kann das Vierfarben-Problem angerissen werden. Gleichzeitig
wird die zeichnerische und malerische Kreativität gefördert [CSU15].</p>
        <p>Natürlich darf auch der „Zaubertrick“ nicht fehlen, bei dem aus einer Anzahl aufgelegter
Karten Fehler entdeckt und korrigiert werden können [CSU15].
3.2</p>
      </sec>
      <sec id="sec-3-2">
        <title>Die Welt der Geheimcodes</title>
        <p>Die Übermittlung von geheimen Botschaften übt für Kinder eine große Faszination aus.
Dabei eignen sich geschichtliche Beispiele besonders gut, angefangen von einer Skytale
über die Cäsar-Verschlüsselung bis hin zum Polybios-Quadrat, dem Freimaurer- und
dem Kreuzcode. Verschlüsselungsverfahren siehe z.B. [CTO16].
3.3</p>
      </sec>
      <sec id="sec-3-3">
        <title>Aufgaben aus dem Biber der Informatik Wettbewerb</title>
        <p>Informatisches Denken ("Computational Thinking") wird seit 10 Jahren auch im
internationalen Wettbewerb "Biber der Informatik" vermittelt, siehe [DF08]. Eine
spezielle Kategorie von Aufgaben ist auch für die Primarstufe geeignet. Aus den
Aufgaben der Vorjahre wurden einige herausgesucht, die sich auch gut in eine
gebastelte, d.h. „begreifbare“ Version umwandeln lassen. Dazu gehörte z.B. ein Frage
und Antwort-Spiel zum Auffinden eines gewünschten Strandbildes zu dem vergrößerte
Bilder gebastelt wurden, die die Kinder angreifen und dazu eigene Fragestellungen
formulieren können.
3.4</p>
      </sec>
      <sec id="sec-3-4">
        <title>Durchführung</title>
        <p>Alle Materialien zu den Beispielen befinden sich in „Zauberkoffern“, von denen zehn
Stück hergestellt wurden, sodass sie auch von interessierten LehrerInnen ausgeborgt
werden können. Die Wiener Zauberschule der Informatik besuchte damit ca. 50 Wiener
Volksschulen. Die Zauberkoffer werden nach und nach mit weiteren interessanten
Materialien gefüllt.</p>
        <p>Aus Kapazitätsgründen konnten an den meisten Schulen nur einmalige Halbtagskurse
abgehalten werden. Die Nettounterrichtszeit betrug dabei zwei Stunden. Um ein etwas
besser abgerundetes Bild der Informatik zu erhalten, wären aber mindestens zwei
derartige Workshops notwendig.</p>
        <p>Natürlich musste auch das Äußere des jeweiligen „Informatikzauberers“ entsprechend
gestaltet sein. Er trat mit Hut, Umhang und Zauberstab auf und konnte so die
Aufmerksamkeit der Kinder sofort auf sich lenken.
3.5</p>
      </sec>
      <sec id="sec-3-5">
        <title>Nachhaltigkeit</title>
        <p>Aus den Rückmeldungen der LehrerInnen konnte entnommen werden, dass sie sehr
interessiert daran sind, zumindest einige Aufgaben direkt in ihre eigene
Unterrichtsgestaltung einzubinden. Das Projekt wurde auch an den beiden Wiener
Pädagogischen Hochschulen vorgeführt. Interessensanfragen aus anderen Bundesländer
liegen vor. Ein sehr ähnliches Ziel wie die Wiener Zauberschule der Informatik verfolgt
das Forschungsprojekt „Informatik – ein Kinderspiel?!“ an der Alpen-Adria-Universität
Klagenfurt [SPR14].
4</p>
        <p>Literaturverzeichnis
[BLS11]
[CSU15]
[CTO16]
[DF08]
[Eu16]
[FM10]
[Ga16a]
[Ga16b]
[IV15]
[SPR14]</p>
        <p>Bergner N., Leonhardt T., Schroeder U.: Zauberschule Informatik- Einblick in die
Welt der Informatik für Kinder im Grundschulalter. Informatik mit Kopf, Herz und
Hand - Praxisbeiträge zur INFOS 2011. Berlin, ZfL-Verlag, 2011. S. 132-141.</p>
        <p>Computer Science Unplugged, http://csunplugged.org/books/, 2015.</p>
        <p>CrypTool-Online, http://www.cryptool-online.org, Stand: 15.5.2016
Dagiene, V., Futschek, G.: Bebras international contest on informatics and computer
literacy: Criteria for good tasks. In: Informatics Education - Supporting Computational
Thinking. Springer Berlin Heidelberg, 2008. S. 19-30.
Futschek G., Moschitz J.: Developing algorithmic thinking by inventing and playing
algorithms. In: Constructionist Approaches to Creative Learning, Thinking and
Education: Lessons for the 21st Century (Constructionism 2010), 2010.</p>
        <p>Gallenbacher J.: Was ist binär? Zahlendarstellung im Binärsystem einfach erklärt, c’t
7/2016, S. 144.
mit</p>
        <p>Sabitzer B., Pasterk S., Reçi E.: Informatics – A Child’s Play?!, Informatics--A Child's
Play. In: Proceedings of the 6th International Conference on Education and New
Learning Technologies (EDULEARN). 2014.</p>
      </sec>
    </sec>
  </body>
  <back>
    <ref-list />
  </back>
</article>